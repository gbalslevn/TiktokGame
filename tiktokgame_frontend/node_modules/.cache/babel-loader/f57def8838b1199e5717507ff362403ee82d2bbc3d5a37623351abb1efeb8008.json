{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Matter from 'matter-js';\nimport bombImage from './assets/2dbomb.png';\n//import testProfilePic from './assets/profilepicture.jpg'\nimport explosion from './assets/explosion.wav';\nimport ding from './assets/ding.mp3';\nimport footstep from './assets/footstep.wav';\nimport popup from './assets/popup.wav';\nimport { useState } from 'react';\nimport ConfettiExplosion from 'react-confetti-explosion';\nimport Leaderboard from './components/Leaderboard';\n// spil minecraft soundtrack\n// elevenlabs til lyd. D-Id til video. Måske bruge heygen. \n// Når folk joiner brug https://responsivevoice.org/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //const video = require('./assets/Game_starting_soon.mp4')\n  const [showWinner, setShowWinner] = useState(false);\n  const [latestWinner, setLatestWinner] = useState('not found');\n  const [gameHasStarted, setGameHaStarted] = useState(false);\n  const [time, setTime] = useState(10);\n  const [confetti, setConfetti] = useState(false);\n  const engine = Matter.Engine.create();\n  engine.gravity.y = 0;\n  const world = engine.world;\n  const canvasWidth = 800;\n  const canvasHeight = 200;\n  function createGame() {\n    const render = Matter.Render.create({\n      element: document.body,\n      engine: engine,\n      options: {\n        width: canvasWidth,\n        height: canvasHeight,\n        showAngleIndicator: true,\n        showCollisions: true,\n        hasBounds: true,\n        wireframes: false,\n        background: '#fff'\n      }\n    });\n    Matter.Render.run(render);\n\n    // create runner\n    const runner = Matter.Runner.create();\n    Matter.Runner.run(runner, engine);\n    const wallThichness = 1;\n    Matter.Composite.add(world, [\n    // walls - Created with (xpos, ypos, width, height)\n    Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, {\n      isStatic: true\n    }),\n    // Top\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, {\n      isStatic: true\n    }),\n    // Bottom\n    Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, {\n      isStatic: true\n    }),\n    // Left\n    Matter.Bodies.rectangle(0, canvasHeight / 2, 50, canvasHeight, {\n      isStatic: true,\n      render: {\n        fillStyle: \"grey\"\n      },\n      collisionFilter: {\n        category: 0x0002\n      }\n    }),\n    // Start object. Up to 32 different collision categories. 0x0001 is default\n    Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, 50, canvasWidth, {\n      isStatic: true,\n      render: {\n        fillStyle: \"green\"\n      }\n    }) // Right - Finish line. \n    ]);\n    // checking collision on finish line\n    Matter.Events.on(engine, 'collisionStart', function (event) {\n      const pairs = event.pairs;\n      console.log(pairs.length);\n      // change object colours to show those starting a collision\n      var pair = pairs[0];\n      if (pair.bodyA.render.fillStyle === 'green') {\n        setLatestWinner(pair.bodyB.label);\n        setShowWinner(true);\n        setConfetti(true);\n        setGameHaStarted(false);\n        Matter.World.clear(world);\n        Matter.Engine.clear(engine);\n        Matter.Render.stop(render);\n        Matter.Runner.stop(runner);\n        Matter.Events.off(engine, 'collisionStart');\n        render.canvas.remove();\n        render.canvas = null;\n        render.context = null;\n      }\n    });\n    const startPlayer = createPlayer(\"Startplayer\");\n    Matter.Composite.add(world, [startPlayer]);\n  }\n  function createPlayer(label, profilePic) {\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, {\n      isStatic: true,\n      render: {\n        sprite: {\n          texture: bombImage,\n          xScale: 0.1,\n          yScale: 0.1\n        }\n      }\n    }); // bomb\n    const player = Matter.Bodies.rectangle(12, canvasHeight / 2, 20, 20, {\n      frictionAir: 0.03,\n      density: 0.3,\n      friction: 0.8,\n      label: label,\n      collisionFilter: {\n        mask: 0x0001\n      } // Should be able to hit each other\n      //render: {sprite: {texture: testProfilePic, xScale: 0.04, yScale: 0.04}} // uncomment this for profile pic\n    });\n    return player;\n  }\n  function spawnPlayer() {\n    console.log(\"Player added\");\n    const player = createPlayer(Math.random());\n    playSound(popup, 0.25);\n    Matter.Composite.add(world, [player]);\n  }\n  function move(username) {\n    const allBodies = Matter.Composite.allBodies(world);\n    const randomIndex = Math.floor(Math.random() * (allBodies.length - 4)) + 4;\n    const randomPlayer = allBodies[randomIndex];\n    /*\n    const foundPlayer = allBodies.find(player => player.label === username);\n    if (foundPlayer) {\n      Matter.Body.applyForce(foundPlayer, foundPlayer.position, { x: 0.5, y: 0 })\n    } else {\n      console.log(\"Object not found with name:\", username);\n    }\n    */\n    playSound(footstep);\n    Matter.Body.applyForce(randomPlayer, randomPlayer.position, {\n      x: 1,\n      y: 0\n    });\n  }\n  async function spawnBomb() {\n    const randomX = Math.floor(Math.random() * (canvasWidth - 100 + 1)) + 100;\n    const randomY = Math.floor(Math.random() * (canvasHeight - 0 + 1)) + 0;\n    const bomb = Matter.Bodies.rectangle(randomX, randomY, 10, 10, {\n      isStatic: true,\n      render: {\n        sprite: {\n          texture: bombImage,\n          xScale: 0.1,\n          yScale: 0.1\n        }\n      }\n    });\n    Matter.Composite.add(world, [bomb]);\n    playSound(ding);\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    playSound(explosion, 0.25);\n    Matter.Composite.remove(world, [bomb]);\n    explode(bomb.position);\n  }\n\n  // Creates consequense of blast radius\n  function explode(bombPosition) {\n    const allBodies = Matter.Composite.allBodies(world);\n    allBodies.forEach(player => {\n      if (player.label === 'Rectangle Body') {\n        // should only affect players\n        return;\n      }\n      const distanceToBomb = bombPosition.x - player.position.x;\n      // later: check if they are safe from blast. If they have bought safety. Could also add effect on y-axis\n      if (distanceToBomb < 0) {\n        // The player has passed the bomb\n        Matter.Body.applyForce(player, player.position, {\n          x: 1,\n          y: 0\n        });\n      }\n      if (distanceToBomb < 20 && distanceToBomb > 0) {\n        // player dies\n        Matter.Composite.remove(world, [player]);\n      } else if (distanceToBomb > 20 && distanceToBomb < 80) {\n        // gets a blast\n        Matter.Body.applyForce(player, player.position, {\n          x: -2,\n          y: 0\n        });\n      } else if (distanceToBomb > 100 && distanceToBomb < 120) {\n        // gets minor blast\n        Matter.Body.applyForce(player, player.position, {\n          x: -1,\n          y: 0\n        });\n      }\n      const yDistanceToBomb = bombPosition.y - player.position.y;\n      if (yDistanceToBomb > 10 && distanceToBomb < 120) {\n        Matter.Body.applyForce(player, player.position, {\n          x: 0,\n          y: -1\n        });\n      } else if (yDistanceToBomb < -10 && distanceToBomb < 120) {\n        Matter.Body.applyForce(player, player.position, {\n          x: 0,\n          y: 1\n        });\n      }\n    });\n  }\n  function playSound(file, volume = 1) {\n    const audio = new Audio(file);\n    audio.volume = volume;\n    audio.play();\n  }\n  let timer = setInterval(() => {\n    setTime(time => {\n      if (time === 0) {\n        clearInterval(timer);\n        return 0;\n      } else return time - 1;\n    });\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spawnPlayer,\n      children: \"Ny spiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        move(\"Startplayer\");\n      },\n      children: \"Boost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spawnBomb,\n      children: \"Bomb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createGame,\n      children: \"Lav spil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), showWinner && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Winner is \", latestWinner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 22\n    }, this), confetti && /*#__PURE__*/_jsxDEV(ConfettiExplosion, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 67\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZbQV4C9k9kC1x+T/cKrjy+fmX7g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Matter","bombImage","explosion","ding","footstep","popup","useState","ConfettiExplosion","Leaderboard","jsxDEV","_jsxDEV","App","_s","showWinner","setShowWinner","latestWinner","setLatestWinner","gameHasStarted","setGameHaStarted","time","setTime","confetti","setConfetti","engine","Engine","create","gravity","y","world","canvasWidth","canvasHeight","createGame","render","Render","element","document","body","options","width","height","showAngleIndicator","showCollisions","hasBounds","wireframes","background","run","runner","Runner","wallThichness","Composite","add","Bodies","rectangle","isStatic","fillStyle","collisionFilter","category","Events","on","event","pairs","console","log","length","pair","bodyA","bodyB","label","World","clear","stop","off","canvas","remove","context","startPlayer","createPlayer","profilePic","sprite","texture","xScale","yScale","player","frictionAir","density","friction","mask","spawnPlayer","Math","random","playSound","move","username","allBodies","randomIndex","floor","randomPlayer","Body","applyForce","position","x","spawnBomb","randomX","randomY","bomb","Promise","resolve","setTimeout","explode","bombPosition","forEach","distanceToBomb","yDistanceToBomb","file","volume","audio","Audio","play","timer","setInterval","clearInterval","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js"],"sourcesContent":["import './App.css';\nimport Matter from 'matter-js';\nimport bombImage from './assets/2dbomb.png'\n//import testProfilePic from './assets/profilepicture.jpg'\nimport explosion from './assets/explosion.wav';\nimport ding from './assets/ding.mp3'\nimport footstep from './assets/footstep.wav'\nimport popup from './assets/popup.wav'\nimport { useState } from 'react';\nimport ConfettiExplosion from 'react-confetti-explosion';\nimport Leaderboard from './components/Leaderboard';\n// spil minecraft soundtrack\n// elevenlabs til lyd. D-Id til video. Måske bruge heygen. \n// Når folk joiner brug https://responsivevoice.org/\n\nfunction App() {\n  //const video = require('./assets/Game_starting_soon.mp4')\n  const [showWinner, setShowWinner] = useState(false)\n  const [latestWinner, setLatestWinner] = useState('not found')\n  const [gameHasStarted, setGameHaStarted] = useState(false)\n  const [time, setTime] = useState(10);\n  const [confetti, setConfetti] = useState(false)\n  const engine = Matter.Engine.create()\n  engine.gravity.y = 0\n  const world = engine.world\n\n  const canvasWidth = 800\n  const canvasHeight = 200\n\n  function createGame() {\n    const render = Matter.Render.create({\n      element: document.body,\n      engine: engine,\n      options: {\n        width: canvasWidth,\n        height: canvasHeight,\n        showAngleIndicator: true,\n        showCollisions: true,\n        hasBounds: true,\n        wireframes: false,\n        background: '#fff'\n      }\n    });\n\n    Matter.Render.run(render);\n\n    // create runner\n    const runner = Matter.Runner.create();\n    Matter.Runner.run(runner, engine);\n\n    const wallThichness = 1\n    Matter.Composite.add(world, [\n      // walls - Created with (xpos, ypos, width, height)\n      Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, { isStatic: true }), // Top\n      Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, { isStatic: true }), // Bottom\n      Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, { isStatic: true }), // Left\n      Matter.Bodies.rectangle(0, canvasHeight / 2, 50, canvasHeight, { isStatic: true, render: { fillStyle: \"grey\" }, collisionFilter: { category: 0x0002 } }), // Start object. Up to 32 different collision categories. 0x0001 is default\n      Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, 50, canvasWidth, { isStatic: true, render: { fillStyle: \"green\" } }) // Right - Finish line. \n    ]);\n    // checking collision on finish line\n    Matter.Events.on(engine, 'collisionStart', function (event) {\n      const pairs = event.pairs;\n      console.log(pairs.length)\n      // change object colours to show those starting a collision\n      var pair = pairs[0];\n      if (pair.bodyA.render.fillStyle === 'green') {\n        setLatestWinner(pair.bodyB.label)\n        setShowWinner(true)\n        setConfetti(true)\n        setGameHaStarted(false)\n        Matter.World.clear(world);\n        Matter.Engine.clear(engine);\n        Matter.Render.stop(render);\n        Matter.Runner.stop(runner);\n        Matter.Events.off(engine, 'collisionStart')\n        render.canvas.remove();\n        render.canvas = null;\n        render.context = null;\n      }\n    });\n\n    const startPlayer = createPlayer(\"Startplayer\")\n    Matter.Composite.add(world, [startPlayer])\n  }\n\n  function createPlayer(label, profilePic) {\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, { isStatic: true, render: { sprite: { texture: bombImage, xScale: 0.1, yScale: 0.1 } } }) // bomb\n    const player = Matter.Bodies.rectangle(12, canvasHeight / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n        label: label,\n        collisionFilter: { mask: 0x0001, }, // Should be able to hit each other\n        //render: {sprite: {texture: testProfilePic, xScale: 0.04, yScale: 0.04}} // uncomment this for profile pic\n      }\n    )\n    return player\n  }\n\n  function spawnPlayer() {\n    console.log(\"Player added\")\n    const player = createPlayer(Math.random())\n    playSound(popup, 0.25)\n    Matter.Composite.add(world, [player])\n  }\n\n  function move(username) {\n    const allBodies = Matter.Composite.allBodies(world)\n    const randomIndex = Math.floor(Math.random() * (allBodies.length - 4)) + 4;\n    const randomPlayer = allBodies[randomIndex]\n    /*\n    const foundPlayer = allBodies.find(player => player.label === username);\n    if (foundPlayer) {\n      Matter.Body.applyForce(foundPlayer, foundPlayer.position, { x: 0.5, y: 0 })\n    } else {\n      console.log(\"Object not found with name:\", username);\n    }\n    */\n    playSound(footstep)\n    Matter.Body.applyForce(randomPlayer, randomPlayer.position, { x: 1, y: 0 })\n  }\n\n  async function spawnBomb() {\n    const randomX = Math.floor(Math.random() * (canvasWidth - 100 + 1)) + 100;\n    const randomY = Math.floor(Math.random() * (canvasHeight - 0 + 1)) + 0;\n    const bomb = Matter.Bodies.rectangle(randomX, randomY, 10, 10, { isStatic: true, render: { sprite: { texture: bombImage, xScale: 0.1, yScale: 0.1 } } })\n    Matter.Composite.add(world, [bomb])\n    playSound(ding)\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    playSound(explosion, 0.25)\n    Matter.Composite.remove(world, [bomb])\n    explode(bomb.position)\n  }\n\n  // Creates consequense of blast radius\n  function explode(bombPosition) {\n    const allBodies = Matter.Composite.allBodies(world)\n    allBodies.forEach(player => {\n      if (player.label === 'Rectangle Body') { // should only affect players\n        return\n      }\n      const distanceToBomb = bombPosition.x - player.position.x\n      // later: check if they are safe from blast. If they have bought safety. Could also add effect on y-axis\n      if (distanceToBomb < 0) { // The player has passed the bomb\n        Matter.Body.applyForce(player, player.position, { x: 1, y: 0 })\n      }\n      if (distanceToBomb < 20 && distanceToBomb > 0) { // player dies\n        Matter.Composite.remove(world, [player])\n      } else if (distanceToBomb > 20 && distanceToBomb < 80) { // gets a blast\n        Matter.Body.applyForce(player, player.position, { x: -2, y: 0 })\n      } else if (distanceToBomb > 100 && distanceToBomb < 120) { // gets minor blast\n        Matter.Body.applyForce(player, player.position, { x: -1, y: 0 })\n      }\n      const yDistanceToBomb = bombPosition.y - player.position.y\n      if (yDistanceToBomb > 10 && distanceToBomb < 120) {\n        Matter.Body.applyForce(player, player.position, { x: 0, y: -1 })\n      } else if (yDistanceToBomb < -10 && distanceToBomb < 120) {\n        Matter.Body.applyForce(player, player.position, { x: 0, y: 1 })\n      }\n    });\n  }\n\n  function playSound(file, volume = 1) {\n    const audio = new Audio(file)\n    audio.volume = volume\n    audio.play()\n  }\n\n  let timer = setInterval(() => {\n    setTime((time) => {\n      if (time === 0) {\n        clearInterval(timer);\n        return 0;\n      } else return time - 1;\n    });\n  }, 1000);\n\n  return (\n    <div className=\"App\">\n      <button onClick={spawnPlayer}>Ny spiller</button>\n      <button onClick={() => { move(\"Startplayer\") }}>Boost</button>\n      <button onClick={spawnBomb}>Bomb</button>\n      <button onClick={createGame}>Lav spil</button>\n      {/*<button onClick={() => { setConfetti(true) }}><>{confetti && <ConfettiExplosion />}</>Confetti</button>*/}\n      <Leaderboard></Leaderboard>\n      {/*<video src={video} type=\"video/mp4\" autoPlay width={300} height={300}></video>*/}\n      {showWinner && <p>Winner is {latestWinner}</p>}{confetti && <ConfettiExplosion />}{/*showWinner && <ComponentToShow />*/}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js\";\nimport './App.css';\nimport Matter from 'matter-js';\nimport bombImage from './assets/2dbomb.png';\n//import testProfilePic from './assets/profilepicture.jpg'\nimport useSound from 'use-sound';\nimport explosion from './assets/explosion.wav';\nimport ding from './assets/ding.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  var _s = $RefreshSig$();\n  const engine = Matter.Engine.create();\n  engine.gravity.y = 0;\n  const world = engine.world;\n  const canvasWidth = 800;\n  const canvasHeight = 200;\n  const render = Matter.Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n      width: canvasWidth,\n      height: canvasHeight,\n      showAngleIndicator: true,\n      showCollisions: true,\n      hasBounds: true,\n      wireframes: false,\n      background: '#fff'\n    }\n  });\n  Matter.Render.run(render);\n\n  // create runner\n  const runner = Matter.Runner.create();\n  Matter.Runner.run(runner, engine);\n  const wallThichness = 1;\n  Matter.Composite.add(world, [\n  // walls - Created with (xpos, ypos, width, height)\n  Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, {\n    isStatic: true\n  }),\n  // Top\n  Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, {\n    isStatic: true\n  }),\n  // Bottom\n  Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, {\n    isStatic: true\n  }),\n  // Left\n  Matter.Bodies.rectangle(0, canvasHeight / 2, 50, canvasHeight, {\n    isStatic: true,\n    render: {\n      fillStyle: \"grey\"\n    },\n    collisionFilter: {\n      category: 0x0002\n    }\n  }),\n  // Start object. Up to 32 different collision categories. 0x0001 is default\n  Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, 50, canvasWidth, {\n    isStatic: true,\n    render: {\n      fillStyle: \"green\"\n    }\n  }) // Right - Finish line. \n  ]);\n  const startPlayer = createPlayer(\"Startplayer\");\n  Matter.Composite.add(world, [startPlayer]);\n  function createPlayer(label, profilePic) {\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, {\n      isStatic: true,\n      render: {\n        sprite: {\n          texture: bombImage,\n          xScale: 0.1,\n          yScale: 0.1\n        }\n      }\n    }); // bomb\n    const player = Matter.Bodies.rectangle(12, render.canvas.height / 2, 20, 20, {\n      frictionAir: 0.03,\n      density: 0.3,\n      friction: 0.8,\n      label: label,\n      collisionFilter: {\n        mask: 0x0001\n      } // Should be able to hit each other\n      //render: {sprite: {texture: testProfilePic, xScale: 0.04, yScale: 0.04}} // uncomment this for profile pic\n    });\n    return player;\n  }\n  function spawnBomb() {\n    const bomb = Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, {\n      isStatic: true,\n      render: {\n        sprite: {\n          texture: bombImage,\n          xScale: 0.1,\n          yScale: 0.1\n        }\n      }\n    });\n    Matter.Composite.add(world, [bomb]);\n    PlaySound(ding);\n    setTimeout(1000);\n    bomb.render.sprite.xScale = 0.5;\n    bomb.render.sprite.yScale = 0.5;\n    setTimeout(1000);\n    bomb.render.sprite.xScale = 0.1;\n    bomb.render.sprite.yScale = 0.1;\n  }\n  function playSound(file) {\n    _s();\n    const [playActive] = useSound(file, {\n      volume: 1\n    });\n  }\n  _s(playSound, \"HUnWAyc58dYjhebAOhdCafmFbik=\", false, function () {\n    return [useSound];\n  });\n  function spawnPlayer() {\n    console.log(\"Player added\");\n    const player = createPlayer(Math.random());\n    Matter.Composite.add(world, [player]);\n  }\n  function move(username) {\n    //Matter.Body.applyForce(startPlayer, {\n    //  x: startPlayer.position.x,\n    //  y: startPlayer.position.y\n    //}, { x: 0.5, y: 0 })\n    const allBodies = Matter.Composite.allBodies(world);\n    const randomIndex = Math.floor(Math.random() * (allBodies.length - 4)) + 4;\n    const randomPlayer = allBodies[randomIndex];\n    /*\n    const foundPlayer = allBodies.find(player => player.label === username);\n    if (foundPlayer) {\n      Matter.Body.applyForce(foundPlayer, foundPlayer.position, { x: 0.5, y: 0 })\n    } else {\n      console.log(\"Object not found with name:\", username);\n    }\n    */\n    Matter.Body.applyForce(randomPlayer, randomPlayer.position, {\n      x: 0.5,\n      y: 0\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spawnPlayer,\n      children: \"Ny spiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        move(\"Startplayer\");\n      },\n      children: \"Boost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spawnBomb,\n      children: \"Bomb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Matter","bombImage","useSound","explosion","ding","jsxDEV","_jsxDEV","App","_s","$RefreshSig$","engine","Engine","create","gravity","y","world","canvasWidth","canvasHeight","render","Render","element","document","body","options","width","height","showAngleIndicator","showCollisions","hasBounds","wireframes","background","run","runner","Runner","wallThichness","Composite","add","Bodies","rectangle","isStatic","fillStyle","collisionFilter","category","startPlayer","createPlayer","label","profilePic","sprite","texture","xScale","yScale","player","canvas","frictionAir","density","friction","mask","spawnBomb","bomb","PlaySound","setTimeout","playSound","file","playActive","volume","spawnPlayer","console","log","Math","random","move","username","allBodies","randomIndex","floor","length","randomPlayer","Body","applyForce","position","x","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js"],"sourcesContent":["import './App.css';\nimport Matter from 'matter-js';\nimport bombImage from './assets/2dbomb.png'\n//import testProfilePic from './assets/profilepicture.jpg'\nimport useSound from 'use-sound';\nimport explosion from './assets/explosion.wav';\nimport ding from './assets/ding.mp3'\n\nfunction App() {\n  const engine = Matter.Engine.create()\n  engine.gravity.y = 0\n  const world = engine.world\n\n  const canvasWidth = 800\n  const canvasHeight = 200\n\n  const render = Matter.Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n      width: canvasWidth,\n      height: canvasHeight,\n      showAngleIndicator: true,\n      showCollisions: true,\n      hasBounds: true,\n      wireframes: false,\n      background: '#fff'\n    }\n  });\n\n\n  Matter.Render.run(render);\n\n  // create runner\n  const runner = Matter.Runner.create();\n  Matter.Runner.run(runner, engine);\n\n\n  const wallThichness = 1\n  Matter.Composite.add(world, [\n    // walls - Created with (xpos, ypos, width, height)\n    Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, { isStatic: true }), // Top\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, { isStatic: true }), // Bottom\n    Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, { isStatic: true}), // Left\n    Matter.Bodies.rectangle(0, canvasHeight / 2, 50, canvasHeight, { isStatic: true, render: {fillStyle: \"grey\"}, collisionFilter: {category: 0x0002} }), // Start object. Up to 32 different collision categories. 0x0001 is default\n    Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, 50, canvasWidth, { isStatic: true, render: {fillStyle: \"green\"} }), // Right - Finish line. \n  ]);\n\n  const startPlayer = createPlayer(\"Startplayer\")\n  Matter.Composite.add(world, [startPlayer])\n\n\n  function createPlayer(label, profilePic) {\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, {isStatic: true, render: {sprite: {texture: bombImage, xScale: 0.1, yScale: 0.1}}}) // bomb\n    const player = Matter.Bodies.rectangle(12, render.canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n        label: label,\n        collisionFilter: {mask: 0x0001, }, // Should be able to hit each other\n        //render: {sprite: {texture: testProfilePic, xScale: 0.04, yScale: 0.04}} // uncomment this for profile pic\n      }\n    )\n    return player\n  }\n\n  function spawnBomb() {\n    const bomb = Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, {isStatic: true, render: {sprite: {texture: bombImage, xScale: 0.1, yScale: 0.1}}}) \n    Matter.Composite.add(world, [bomb])\n    PlaySound(ding)\n    setTimeout(1000)\n    bomb.render.sprite.xScale = 0.5;\n    bomb.render.sprite.yScale = 0.5;\n    setTimeout(1000)\n    bomb.render.sprite.xScale = 0.1;\n    bomb.render.sprite.yScale = 0.1;\n  } \n\n  function playSound(file) {\n    const [playActive] = useSound(\n      file,\n      { volume: 1 }\n    );\n  }\n  \n\n\n\n  function spawnPlayer() {\n    console.log(\"Player added\")\n    const player = createPlayer(Math.random())\n    Matter.Composite.add(world, [player])\n  }\n\n  function move(username) {\n    //Matter.Body.applyForce(startPlayer, {\n    //  x: startPlayer.position.x,\n    //  y: startPlayer.position.y\n    //}, { x: 0.5, y: 0 })\n    const allBodies = Matter.Composite.allBodies(world)\n    const randomIndex = Math.floor(Math.random() * (allBodies.length - 4)) + 4;\n    const randomPlayer = allBodies[randomIndex]\n    /*\n    const foundPlayer = allBodies.find(player => player.label === username);\n    if (foundPlayer) {\n      Matter.Body.applyForce(foundPlayer, foundPlayer.position, { x: 0.5, y: 0 })\n    } else {\n      console.log(\"Object not found with name:\", username);\n    }\n    */\n    Matter.Body.applyForce(randomPlayer, randomPlayer.position, { x: 0.5, y: 0 })\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={spawnPlayer}>Ny spiller</button>\n      <button onClick={() => { move(\"Startplayer\") }}>Boost</button>\n      <button onClick={spawnBomb}>Bomb</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/components/TikTok.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TikTok() {\n  _s();\n  const {\n    WebcastPushConnection\n  } = require('tiktok-live-connector');\n  const [inputValue, setInputValue] = useS('');\n  function connect(tiktokUsername) {\n    // Create a new wrapper object and pass the username\n    let tiktokLiveConnection = new WebcastPushConnection(tiktokUsername);\n    // Connect to the chat (await can be used as well)\n    tiktokLiveConnection.connect().then(state => {\n      console.info(`Connected to roomId ${state.roomId}`);\n    }).catch(err => {\n      console.error('Failed to connect with username ' + inputValue, err);\n    });\n\n    // Define the events that you want to handle\n    // In this case we listen to chat messages (comments)\n    tiktokLiveConnection.on('chat', data => {\n      console.log(`${data.uniqueId} (userId:${data.userId}) writes: ${data.comment}`);\n    });\n\n    // Receive gifts sent to the streamer\n    tiktokLiveConnection.on('gift', data => {\n      console.log(`${data.uniqueId} (userId:${data.userId}) sends ${data.giftId}`);\n    });\n  }\n\n  // Function to handle button click\n  const handleButtonClick = () => {\n    // Call your function with inputValue as a parameter\n    connect(inputValue);\n  };\n\n  // Function to handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Enter Tiktok username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Connect to live\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(TikTok, \"MGA60D2+PqaBTulDK8qnXUwoSuI=\", true);\n_c = TikTok;\nexport default TikTok;\nvar _c;\n$RefreshReg$(_c, \"TikTok\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TikTok","_s","WebcastPushConnection","require","inputValue","setInputValue","useS","connect","tiktokUsername","tiktokLiveConnection","then","state","console","info","roomId","catch","err","error","on","data","log","uniqueId","userId","comment","giftId","handleButtonClick","handleInputChange","event","target","value","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/components/TikTok.js"],"sourcesContent":["import React from 'react';\n\nfunction TikTok() {\n    const { WebcastPushConnection } = require('tiktok-live-connector');\n    const [inputValue, setInputValue] = useS('');\n\n    function connect(tiktokUsername) {\n        // Create a new wrapper object and pass the username\n        let tiktokLiveConnection = new WebcastPushConnection(tiktokUsername);\n        // Connect to the chat (await can be used as well)\n        tiktokLiveConnection.connect().then(state => {\n            console.info(`Connected to roomId ${state.roomId}`);\n        }).catch(err => {\n            console.error('Failed to connect with username ' + inputValue, err);\n        })\n\n        // Define the events that you want to handle\n        // In this case we listen to chat messages (comments)\n        tiktokLiveConnection.on('chat', data => {\n            console.log(`${data.uniqueId} (userId:${data.userId}) writes: ${data.comment}`);\n        })\n\n        // Receive gifts sent to the streamer\n        tiktokLiveConnection.on('gift', data => {\n            console.log(`${data.uniqueId} (userId:${data.userId}) sends ${data.giftId}`);\n        })\n    }\n\n    // Function to handle button click\n    const handleButtonClick = () => {\n        // Call your function with inputValue as a parameter\n        connect(inputValue);\n    };\n\n    // Function to handle input change\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder=\"Enter Tiktok username\"\n            />\n            <button onClick={handleButtonClick}>Connect to live</button>\n        </div>\n    );\n}\n\nexport default TikTok;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM;IAAEC;EAAsB,CAAC,GAAGC,OAAO,CAAC,uBAAuB,CAAC;EAClE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,IAAI,CAAC,EAAE,CAAC;EAE5C,SAASC,OAAOA,CAACC,cAAc,EAAE;IAC7B;IACA,IAAIC,oBAAoB,GAAG,IAAIP,qBAAqB,CAACM,cAAc,CAAC;IACpE;IACAC,oBAAoB,CAACF,OAAO,CAAC,CAAC,CAACG,IAAI,CAACC,KAAK,IAAI;MACzCC,OAAO,CAACC,IAAI,CAAE,uBAAsBF,KAAK,CAACG,MAAO,EAAC,CAAC;IACvD,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;MACZJ,OAAO,CAACK,KAAK,CAAC,kCAAkC,GAAGb,UAAU,EAAEY,GAAG,CAAC;IACvE,CAAC,CAAC;;IAEF;IACA;IACAP,oBAAoB,CAACS,EAAE,CAAC,MAAM,EAAEC,IAAI,IAAI;MACpCP,OAAO,CAACQ,GAAG,CAAE,GAAED,IAAI,CAACE,QAAS,YAAWF,IAAI,CAACG,MAAO,aAAYH,IAAI,CAACI,OAAQ,EAAC,CAAC;IACnF,CAAC,CAAC;;IAEF;IACAd,oBAAoB,CAACS,EAAE,CAAC,MAAM,EAAEC,IAAI,IAAI;MACpCP,OAAO,CAACQ,GAAG,CAAE,GAAED,IAAI,CAACE,QAAS,YAAWF,IAAI,CAACG,MAAO,WAAUH,IAAI,CAACK,MAAO,EAAC,CAAC;IAChF,CAAC,CAAC;EACN;;EAEA;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACAlB,OAAO,CAACH,UAAU,CAAC;EACvB,CAAC;;EAED;EACA,MAAMsB,iBAAiB,GAAIC,KAAK,IAAK;IACjCtB,aAAa,CAACsB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EACD,oBACI9B,OAAA;IAAA+B,QAAA,gBACI/B,OAAA;MACIgC,IAAI,EAAC,MAAM;MACXF,KAAK,EAAEzB,UAAW;MAClB4B,QAAQ,EAAEN,iBAAkB;MAC5BO,WAAW,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFtC,OAAA;MAAQuC,OAAO,EAAEb,iBAAkB;MAAAK,QAAA,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd;AAACpC,EAAA,CA/CQD,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AAiDf,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
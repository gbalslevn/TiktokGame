{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/components/TikTok.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TikTok() {\n  _s();\n  //const { WebcastPushConnection } = require('tiktok-live-connector');\n  const [inputValue, setInputValue] = useState('');\n  function connect(tiktokUsername) {\n    /*\n    // Create a new wrapper object and pass the username\n    let tiktokLiveConnection = new WebcastPushConnection(tiktokUsername);\n    // Connect to the chat (await can be used as well)\n    tiktokLiveConnection.connect().then(state => {\n        console.info(`Connected to roomId ${state.roomId}`);\n    }).catch(err => {\n        console.error('Failed to connect with username ' + inputValue, err);\n    })\n     // Define the events that you want to handle\n    // In this case we listen to chat messages (comments)\n    tiktokLiveConnection.on('chat', data => {\n        console.log(`${data.uniqueId} (userId:${data.userId}) writes: ${data.comment}`);\n    })\n     // Receive gifts sent to the streamer\n    tiktokLiveConnection.on('gift', data => {\n        console.log(`${data.uniqueId} (userId:${data.userId}) sends ${data.giftId}`);\n    })\n    */\n  }\n\n  // Function to handle button click\n  const handleButtonClick = () => {\n    // Call your function with inputValue as a parameter\n    //connect(inputValue);\n  };\n\n  // Function to handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  useEffect(() => {\n    console.log(input);\n  }, [inputValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Enter Tiktok username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Connect to live\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(TikTok, \"g3WCsqcvSc9WB7w4du2ucRdqd7Y=\");\n_c = TikTok;\nexport default TikTok;\nvar _c;\n$RefreshReg$(_c, \"TikTok\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","TikTok","_s","inputValue","setInputValue","connect","tiktokUsername","handleButtonClick","handleInputChange","event","target","value","console","log","input","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/components/TikTok.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction TikTok() {\n    //const { WebcastPushConnection } = require('tiktok-live-connector');\n    const [inputValue, setInputValue] = useState('');\n\n    function connect(tiktokUsername) {\n        /*\n        // Create a new wrapper object and pass the username\n        let tiktokLiveConnection = new WebcastPushConnection(tiktokUsername);\n        // Connect to the chat (await can be used as well)\n        tiktokLiveConnection.connect().then(state => {\n            console.info(`Connected to roomId ${state.roomId}`);\n        }).catch(err => {\n            console.error('Failed to connect with username ' + inputValue, err);\n        })\n\n        // Define the events that you want to handle\n        // In this case we listen to chat messages (comments)\n        tiktokLiveConnection.on('chat', data => {\n            console.log(`${data.uniqueId} (userId:${data.userId}) writes: ${data.comment}`);\n        })\n\n        // Receive gifts sent to the streamer\n        tiktokLiveConnection.on('gift', data => {\n            console.log(`${data.uniqueId} (userId:${data.userId}) sends ${data.giftId}`);\n        })\n        */\n    }\n\n    // Function to handle button click\n    const handleButtonClick = () => {\n        // Call your function with inputValue as a parameter\n        //connect(inputValue);\n    };\n\n    // Function to handle input change\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    useEffect(() => {\n        console.log(input)\n    }, [inputValue])\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder=\"Enter Tiktok username\"\n            />\n            <button onClick={handleButtonClick}>Connect to live</button>\n        </div>\n    );\n}\n\nexport default TikTok;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhD,SAASO,OAAOA,CAACC,cAAc,EAAE;IAC7B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAlBQ;;EAuBJ;EACA,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACA;EAAA,CACH;;EAED;EACA,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACjCL,aAAa,CAACK,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAEDd,SAAS,CAAC,MAAM;IACZe,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACtB,CAAC,EAAE,CAACX,UAAU,CAAC,CAAC;EAChB,oBACIH,OAAA;IAAAe,QAAA,gBACIf,OAAA;MACIgB,IAAI,EAAC,MAAM;MACXL,KAAK,EAAER,UAAW;MAClBc,QAAQ,EAAET,iBAAkB;MAC5BU,WAAW,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFtB,OAAA;MAAQuB,OAAO,EAAEhB,iBAAkB;MAAAQ,QAAA,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEd;AAACpB,EAAA,CArDQD,MAAM;AAAAuB,EAAA,GAANvB,MAAM;AAuDf,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
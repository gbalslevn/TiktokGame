{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRe } from 'react';\nimport './App.css';\nimport Matter from 'matter-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const engine = useRef(null);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    // Create a Matter.js engine\n    engine.current = Matter.Engine.create();\n\n    // Create a renderer\n    const render = Matter.Render.create({\n      element: canvasRef.current,\n      engine: engine.current,\n      options: {\n        width: 800,\n        height: 600,\n        wireframes: false\n      }\n    });\n\n    // Create a square\n    const square = Matter.Bodies.rectangle(400, 300, 50, 50, {\n      frictionAir: 0.05\n    });\n    Matter.World.add(engine.current.world, [square]);\n\n    // Run the engine\n    Matter.Engine.run(engine.current);\n    Matter.Render.run(render);\n\n    // Define key events to control the square\n    const moveSquareForward = () => {\n      Matter.Body.applyForce(square, square.position, {\n        x: 0.05,\n        y: 0\n      });\n    };\n    window.addEventListener('keydown', e => {\n      if (e.key === 'ArrowRight') {\n        moveSquareForward();\n      }\n    });\n\n    // Cleanup\n    return () => {\n      Matter.Render.stop(render);\n      Matter.World.clear(engine.current.world);\n      Matter.Engine.clear(engine.current);\n    };\n  }, []);\n  /*\n  const { PI } = Math;\n  const TAU = PI * 2;\n  const canvas = document.createElement(\"canvas\");\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  canvas.height = 180;\n  canvas.width = 400;\n   const engine = Matter.Engine.create();\n  engine.gravity.y = 0; // enable top-down\n  const ship = {\n    body: Matter.Bodies.rectangle(canvas.width / 2, canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    ),\n    size: 20,\n    destX: canvas.width / 2,\n    destY: canvas.height / 2,\n    color: \"#eaf\",\n    setDestination(x, y) {\n      this.destX = x;\n      this.destY = y;\n    },\n    draw(ctx) {\n      ctx.save();\n      ctx.translate(this.body.position.x, this.body.position.y);\n      ctx.rotate(this.body.angle);\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.size / 1.2, 0);\n      ctx.stroke();\n      ctx.fillStyle = this.color;\n      ctx.fillRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.strokeRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.restore();\n    },\n  };\n   Matter.Composite.add(engine.world, [ship.body]);\n   canvas.addEventListener(\"click\", (e) => {\n    ship.setDestination(e.offsetX, e.offsetY);\n  });\n   (function update() {\n    requestAnimationFrame(update);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n     const { x, y } = ship.body.position;\n    const dist = Math.sqrt(\n      (ship.destX - x) ** 2 + (ship.destY - y) ** 2\n    );\n     if (dist > 10) {\n      const dx = ship.destX - ship.body.position.x;\n      const dy = ship.destY - ship.body.position.y;\n       let theta = Math.atan2(dy, dx);\n      const a =\n        ship.body.angle > 0\n          ? ((ship.body.angle + TAU) % TAU) - TAU\n          : -(((-ship.body.angle + TAU) % TAU) - TAU);\n      let diff = a - theta;\n      diff = diff > PI ? diff - TAU : diff;\n      diff = diff < -PI ? diff + TAU : diff;\n      const f = dist < 70 ? Math.min(0.02, dist / 10000) : 0.03;\n      Matter.Body.applyForce(\n        ship.body,\n        { x, y },\n        {\n          x: Math.cos(theta) * f,\n          y: Math.sin(theta) * f,\n        }\n      );\n       if (dist > 15) {\n        Matter.Body.setAngularVelocity(ship.body, diff / -8);\n      } else {\n        Matter.Body.setAngularVelocity(ship.body, 0);\n      }\n    }\n     ship.draw(ctx); // Draws figure\n    Matter.Engine.update(engine);\n  })();\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dNfvKJ6u6pcxkt8O9+DFhOE/SBE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRe","Matter","jsxDEV","_jsxDEV","App","_s","engine","useRef","canvasRef","current","Engine","create","render","Render","element","options","width","height","wireframes","square","Bodies","rectangle","frictionAir","World","add","world","run","moveSquareForward","Body","applyForce","position","x","y","window","addEventListener","e","key","stop","clear","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js"],"sourcesContent":["import { useEffect, useRe } from 'react';\nimport './App.css';\nimport Matter from 'matter-js';\n\nfunction App() {\n  const engine = useRef(null);\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    // Create a Matter.js engine\n    engine.current = Matter.Engine.create();\n\n    // Create a renderer\n    const render = Matter.Render.create({\n      element: canvasRef.current,\n      engine: engine.current,\n      options: {\n        width: 800,\n        height: 600,\n        wireframes: false\n      }\n    });\n\n    // Create a square\n    const square = Matter.Bodies.rectangle(400, 300, 50, 50, { frictionAir: 0.05 });\n    Matter.World.add(engine.current.world, [square]);\n\n    // Run the engine\n    Matter.Engine.run(engine.current);\n    Matter.Render.run(render);\n\n    // Define key events to control the square\n    const moveSquareForward = () => {\n      Matter.Body.applyForce(square, square.position, { x: 0.05, y: 0 });\n    };\n\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'ArrowRight') {\n        moveSquareForward();\n      }\n    });\n\n    // Cleanup\n    return () => {\n      Matter.Render.stop(render);\n      Matter.World.clear(engine.current.world);\n      Matter.Engine.clear(engine.current);\n    };\n  }, []);\n  /*\n  const { PI } = Math;\n  const TAU = PI * 2;\n  const canvas = document.createElement(\"canvas\");\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  canvas.height = 180;\n  canvas.width = 400;\n\n  const engine = Matter.Engine.create();\n  engine.gravity.y = 0; // enable top-down\n  const ship = {\n    body: Matter.Bodies.rectangle(canvas.width / 2, canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    ),\n    size: 20,\n    destX: canvas.width / 2,\n    destY: canvas.height / 2,\n    color: \"#eaf\",\n    setDestination(x, y) {\n      this.destX = x;\n      this.destY = y;\n    },\n    draw(ctx) {\n      ctx.save();\n      ctx.translate(this.body.position.x, this.body.position.y);\n      ctx.rotate(this.body.angle);\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.size / 1.2, 0);\n      ctx.stroke();\n      ctx.fillStyle = this.color;\n      ctx.fillRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.strokeRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.restore();\n    },\n  };\n\n  Matter.Composite.add(engine.world, [ship.body]);\n\n  canvas.addEventListener(\"click\", (e) => {\n    ship.setDestination(e.offsetX, e.offsetY);\n  });\n\n  (function update() {\n    requestAnimationFrame(update);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const { x, y } = ship.body.position;\n    const dist = Math.sqrt(\n      (ship.destX - x) ** 2 + (ship.destY - y) ** 2\n    );\n\n    if (dist > 10) {\n      const dx = ship.destX - ship.body.position.x;\n      const dy = ship.destY - ship.body.position.y;\n\n      let theta = Math.atan2(dy, dx);\n      const a =\n        ship.body.angle > 0\n          ? ((ship.body.angle + TAU) % TAU) - TAU\n          : -(((-ship.body.angle + TAU) % TAU) - TAU);\n      let diff = a - theta;\n      diff = diff > PI ? diff - TAU : diff;\n      diff = diff < -PI ? diff + TAU : diff;\n      const f = dist < 70 ? Math.min(0.02, dist / 10000) : 0.03;\n      Matter.Body.applyForce(\n        ship.body,\n        { x, y },\n        {\n          x: Math.cos(theta) * f,\n          y: Math.sin(theta) * f,\n        }\n      );\n\n      if (dist > 15) {\n        Matter.Body.setAngularVelocity(ship.body, diff / -8);\n      } else {\n        Matter.Body.setAngularVelocity(ship.body, 0);\n      }\n    }\n\n    ship.draw(ctx); // Draws figure\n    Matter.Engine.update(engine);\n  })();\n  */\n  return (\n    <div className=\"App\">\n    \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGC,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMC,SAAS,GAAGD,MAAM,CAAC,IAAI,CAAC;EAE9BR,SAAS,CAAC,MAAM;IACd;IACAO,MAAM,CAACG,OAAO,GAAGR,MAAM,CAACS,MAAM,CAACC,MAAM,CAAC,CAAC;;IAEvC;IACA,MAAMC,MAAM,GAAGX,MAAM,CAACY,MAAM,CAACF,MAAM,CAAC;MAClCG,OAAO,EAAEN,SAAS,CAACC,OAAO;MAC1BH,MAAM,EAAEA,MAAM,CAACG,OAAO;MACtBM,OAAO,EAAE;QACPC,KAAK,EAAE,GAAG;QACVC,MAAM,EAAE,GAAG;QACXC,UAAU,EAAE;MACd;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,MAAM,GAAGlB,MAAM,CAACmB,MAAM,CAACC,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAK,CAAC,CAAC;IAC/ErB,MAAM,CAACsB,KAAK,CAACC,GAAG,CAAClB,MAAM,CAACG,OAAO,CAACgB,KAAK,EAAE,CAACN,MAAM,CAAC,CAAC;;IAEhD;IACAlB,MAAM,CAACS,MAAM,CAACgB,GAAG,CAACpB,MAAM,CAACG,OAAO,CAAC;IACjCR,MAAM,CAACY,MAAM,CAACa,GAAG,CAACd,MAAM,CAAC;;IAEzB;IACA,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;MAC9B1B,MAAM,CAAC2B,IAAI,CAACC,UAAU,CAACV,MAAM,EAAEA,MAAM,CAACW,QAAQ,EAAE;QAAEC,CAAC,EAAE,IAAI;QAAEC,CAAC,EAAE;MAAE,CAAC,CAAC;IACpE,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAGC,CAAC,IAAK;MACxC,IAAIA,CAAC,CAACC,GAAG,KAAK,YAAY,EAAE;QAC1BT,iBAAiB,CAAC,CAAC;MACrB;IACF,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACX1B,MAAM,CAACY,MAAM,CAACwB,IAAI,CAACzB,MAAM,CAAC;MAC1BX,MAAM,CAACsB,KAAK,CAACe,KAAK,CAAChC,MAAM,CAACG,OAAO,CAACgB,KAAK,CAAC;MACxCxB,MAAM,CAACS,MAAM,CAAC4B,KAAK,CAAChC,MAAM,CAACG,OAAO,CAAC;IACrC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAUE,oBACEN,OAAA;IAAKoC,SAAS,EAAC;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEf,CAAC;AAEV;AAACtC,EAAA,CAvJQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAyJZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
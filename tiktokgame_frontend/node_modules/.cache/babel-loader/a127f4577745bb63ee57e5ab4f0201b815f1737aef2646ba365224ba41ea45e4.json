{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport './App.css';\nimport Matter from 'matter-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const engine = Matter.Engine.create();\n  engine.gravity.y = 0;\n  const world = engine.world;\n  const render = Matter.Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n      width: 800,\n      height: 200,\n      showAngleIndicator: true,\n      showCollisions: true,\n      hasBounds: true,\n      wireframes: false,\n      background: '#fff'\n    }\n  });\n  Matter.Render.run(render);\n\n  // create runner\n  const runner = Matter.Runner.create();\n  Matter.Runner.run(runner, engine);\n\n  // add bodies\n  Matter.Composite.add(world, [\n  // walls\n  Matter.Bodies.rectangle(render.canvas.width / 2, 0, 800, 10, {\n    isStatic: true\n  }), Matter.Bodies.rectangle(render.canvas.width / 2, render.canvas.height, 800, 10, {\n    isStatic: true\n  })]);\n  function spawnPlayer() {\n    //Math.random()\n    const player = Matter.Bodies.rectangle(render.canvas.width / 2, render.canvas.height / 2, 20, 20, {\n      frictionAir: 0.03,\n      density: 0.3,\n      friction: 0.8\n    });\n    return player;\n  }\n  function addPlayer() {\n    console.log(\"Player added\");\n    const player = spawnPlayer();\n    Matter.Composite.add(world, [player]);\n  }\n  function move() {\n    console.log(Matter.Composite.allBodies());\n  }\n  useEffect(() => {}, []);\n  /*\n  const { PI } = Math;\n  const TAU = PI * 2;\n  const canvas = document.createElement(\"canvas\");\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  canvas.height = 180;\n  canvas.width = 400;\n   const engine = Matter.Engine.create();\n  engine.gravity.y = 0; // enable top-down\n  const ship = {\n    body: Matter.Bodies.rectangle(canvas.width / 2, canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    ),\n    size: 20,\n    destX: canvas.width / 2,\n    destY: canvas.height / 2,\n    color: \"#eaf\",\n    setDestination(x, y) {\n      this.destX = x;\n      this.destY = y;\n    },\n    draw(ctx) {\n      ctx.save();\n      ctx.translate(this.body.position.x, this.body.position.y);\n      ctx.rotate(this.body.angle);\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.size / 1.2, 0);\n      ctx.stroke();\n      ctx.fillStyle = this.color;\n      ctx.fillRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.strokeRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.restore();\n    },\n  };\n   Matter.Composite.add(engine.world, [ship.body]);\n   canvas.addEventListener(\"click\", (e) => {\n    ship.setDestination(e.offsetX, e.offsetY);\n  });\n   (function update() {\n    requestAnimationFrame(update);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n     const { x, y } = ship.body.position;\n    const dist = Math.sqrt(\n      (ship.destX - x) ** 2 + (ship.destY - y) ** 2\n    );\n     if (dist > 10) {\n      const dx = ship.destX - ship.body.position.x;\n      const dy = ship.destY - ship.body.position.y;\n       let theta = Math.atan2(dy, dx);\n      const a =\n        ship.body.angle > 0\n          ? ((ship.body.angle + TAU) % TAU) - TAU\n          : -(((-ship.body.angle + TAU) % TAU) - TAU);\n      let diff = a - theta;\n      diff = diff > PI ? diff - TAU : diff;\n      diff = diff < -PI ? diff + TAU : diff;\n      const f = dist < 70 ? Math.min(0.02, dist / 10000) : 0.03;\n      Matter.Body.applyForce(\n        ship.body,\n        { x, y },\n        {\n          x: Math.cos(theta) * f,\n          y: Math.sin(theta) * f,\n        }\n      );\n       if (dist > 15) {\n        Matter.Body.setAngularVelocity(ship.body, diff / -8);\n      } else {\n        Matter.Body.setAngularVelocity(ship.body, 0);\n      }\n    }\n     ship.draw(ctx); // Draws figure\n    Matter.Engine.update(engine);\n  })();\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addPlayer,\n      children: \"Ny spiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: move,\n      children: \"Boost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Matter","jsxDEV","_jsxDEV","App","_s","engine","Engine","create","gravity","y","world","render","Render","element","document","body","options","width","height","showAngleIndicator","showCollisions","hasBounds","wireframes","background","run","runner","Runner","Composite","add","Bodies","rectangle","canvas","isStatic","spawnPlayer","player","frictionAir","density","friction","addPlayer","console","log","move","allBodies","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport './App.css';\nimport Matter from 'matter-js';\n\nfunction App() {\n  const engine = Matter.Engine.create()\n  engine.gravity.y = 0\n  const world = engine.world\n\n  \n\n  const render = Matter.Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n      width: 800,\n      height: 200,\n      showAngleIndicator: true,\n      showCollisions: true,\n      hasBounds: true,\n      wireframes: false,\n      background: '#fff'\n    }\n  });\n\n\n  Matter.Render.run(render);\n\n  // create runner\n  const runner = Matter.Runner.create();\n  Matter.Runner.run(runner, engine);\n\n\n  // add bodies\n  Matter.Composite.add(world, [\n    // walls\n    Matter.Bodies.rectangle(render.canvas.width / 2, 0, 800, 10, { isStatic: true }),\n    Matter.Bodies.rectangle(render.canvas.width / 2, render.canvas.height, 800, 10, { isStatic: true }),\n  ]);\n\n  function spawnPlayer() {\n    //Math.random()\n    const player = Matter.Bodies.rectangle(render.canvas.width / 2, render.canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    )\n\n    return player\n  }\n\n\n\n  function addPlayer() {\n    console.log(\"Player added\")\n    const player = spawnPlayer()\n    Matter.Composite.add(world, [player])\n  }\n\n  function move() {\n    console.log(Matter.Composite.allBodies())\n  }\n\n  useEffect(() => {\n  }, [])\n  /*\n  const { PI } = Math;\n  const TAU = PI * 2;\n  const canvas = document.createElement(\"canvas\");\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  canvas.height = 180;\n  canvas.width = 400;\n\n  const engine = Matter.Engine.create();\n  engine.gravity.y = 0; // enable top-down\n  const ship = {\n    body: Matter.Bodies.rectangle(canvas.width / 2, canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    ),\n    size: 20,\n    destX: canvas.width / 2,\n    destY: canvas.height / 2,\n    color: \"#eaf\",\n    setDestination(x, y) {\n      this.destX = x;\n      this.destY = y;\n    },\n    draw(ctx) {\n      ctx.save();\n      ctx.translate(this.body.position.x, this.body.position.y);\n      ctx.rotate(this.body.angle);\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.size / 1.2, 0);\n      ctx.stroke();\n      ctx.fillStyle = this.color;\n      ctx.fillRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.strokeRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.restore();\n    },\n  };\n\n  Matter.Composite.add(engine.world, [ship.body]);\n\n  canvas.addEventListener(\"click\", (e) => {\n    ship.setDestination(e.offsetX, e.offsetY);\n  });\n\n  (function update() {\n    requestAnimationFrame(update);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const { x, y } = ship.body.position;\n    const dist = Math.sqrt(\n      (ship.destX - x) ** 2 + (ship.destY - y) ** 2\n    );\n\n    if (dist > 10) {\n      const dx = ship.destX - ship.body.position.x;\n      const dy = ship.destY - ship.body.position.y;\n\n      let theta = Math.atan2(dy, dx);\n      const a =\n        ship.body.angle > 0\n          ? ((ship.body.angle + TAU) % TAU) - TAU\n          : -(((-ship.body.angle + TAU) % TAU) - TAU);\n      let diff = a - theta;\n      diff = diff > PI ? diff - TAU : diff;\n      diff = diff < -PI ? diff + TAU : diff;\n      const f = dist < 70 ? Math.min(0.02, dist / 10000) : 0.03;\n      Matter.Body.applyForce(\n        ship.body,\n        { x, y },\n        {\n          x: Math.cos(theta) * f,\n          y: Math.sin(theta) * f,\n        }\n      );\n\n      if (dist > 15) {\n        Matter.Body.setAngularVelocity(ship.body, diff / -8);\n      } else {\n        Matter.Body.setAngularVelocity(ship.body, 0);\n      }\n    }\n\n    ship.draw(ctx); // Draws figure\n    Matter.Engine.update(engine);\n  })();\n  */\n  return (\n    <div className=\"App\">\n      <button onClick={addPlayer}>Ny spiller</button>\n      <button onClick={move}>Boost</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,MAAM,GAAGL,MAAM,CAACM,MAAM,CAACC,MAAM,CAAC,CAAC;EACrCF,MAAM,CAACG,OAAO,CAACC,CAAC,GAAG,CAAC;EACpB,MAAMC,KAAK,GAAGL,MAAM,CAACK,KAAK;EAI1B,MAAMC,MAAM,GAAGX,MAAM,CAACY,MAAM,CAACL,MAAM,CAAC;IAClCM,OAAO,EAAEC,QAAQ,CAACC,IAAI;IACtBV,MAAM,EAAEA,MAAM;IACdW,OAAO,EAAE;MACPC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,kBAAkB,EAAE,IAAI;MACxBC,cAAc,EAAE,IAAI;MACpBC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,KAAK;MACjBC,UAAU,EAAE;IACd;EACF,CAAC,CAAC;EAGFvB,MAAM,CAACY,MAAM,CAACY,GAAG,CAACb,MAAM,CAAC;;EAEzB;EACA,MAAMc,MAAM,GAAGzB,MAAM,CAAC0B,MAAM,CAACnB,MAAM,CAAC,CAAC;EACrCP,MAAM,CAAC0B,MAAM,CAACF,GAAG,CAACC,MAAM,EAAEpB,MAAM,CAAC;;EAGjC;EACAL,MAAM,CAAC2B,SAAS,CAACC,GAAG,CAAClB,KAAK,EAAE;EAC1B;EACAV,MAAM,CAAC6B,MAAM,CAACC,SAAS,CAACnB,MAAM,CAACoB,MAAM,CAACd,KAAK,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE;IAAEe,QAAQ,EAAE;EAAK,CAAC,CAAC,EAChFhC,MAAM,CAAC6B,MAAM,CAACC,SAAS,CAACnB,MAAM,CAACoB,MAAM,CAACd,KAAK,GAAG,CAAC,EAAEN,MAAM,CAACoB,MAAM,CAACb,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE;IAAEc,QAAQ,EAAE;EAAK,CAAC,CAAC,CACpG,CAAC;EAEF,SAASC,WAAWA,CAAA,EAAG;IACrB;IACA,MAAMC,MAAM,GAAGlC,MAAM,CAAC6B,MAAM,CAACC,SAAS,CAACnB,MAAM,CAACoB,MAAM,CAACd,KAAK,GAAG,CAAC,EAAEN,MAAM,CAACoB,MAAM,CAACb,MAAM,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAC9F;MACEiB,WAAW,EAAE,IAAI;MACjBC,OAAO,EAAE,GAAG;MACZC,QAAQ,EAAE;IACZ,CACF,CAAC;IAED,OAAOH,MAAM;EACf;EAIA,SAASI,SAASA,CAAA,EAAG;IACnBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,MAAMN,MAAM,GAAGD,WAAW,CAAC,CAAC;IAC5BjC,MAAM,CAAC2B,SAAS,CAACC,GAAG,CAAClB,KAAK,EAAE,CAACwB,MAAM,CAAC,CAAC;EACvC;EAEA,SAASO,IAAIA,CAAA,EAAG;IACdF,OAAO,CAACC,GAAG,CAACxC,MAAM,CAAC2B,SAAS,CAACe,SAAS,CAAC,CAAC,CAAC;EAC3C;EAEA3C,SAAS,CAAC,MAAM,CAChB,CAAC,EAAE,EAAE,CAAC;EACN;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAUE,oBACEG,OAAA;IAAKyC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1C,OAAA;MAAQ2C,OAAO,EAAEP,SAAU;MAAAM,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/C/C,OAAA;MAAQ2C,OAAO,EAAEJ,IAAK;MAAAG,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAAC7C,EAAA,CA1KQD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AA4KZ,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
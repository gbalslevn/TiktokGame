{"ast":null,"code":"\"use strict\";\n\n/**\n * Custom cookie jar for axios\n * Because axios-cookiejar-support does not work as expected when using proxy agents\n * https://github.com/zerodytrash/TikTok-Livestream-Chat-Connector/issues/18\n */\nclass TikTokCookieJar {\n  constructor(axiosInstance) {\n    this.axiosInstance = axiosInstance;\n    this.cookies = {}; // Intercept responses to store cookies\n\n    this.axiosInstance.interceptors.response.use(response => {\n      this.readCookies(response);\n      return response;\n    }); // Intercept request to append cookies\n\n    this.axiosInstance.interceptors.request.use(request => {\n      this.appendCookies(request);\n      return request;\n    });\n  }\n  readCookies(response) {\n    const setCookieHeaders = response.headers['set-cookie'];\n    if (Array.isArray(setCookieHeaders)) {\n      // Mutiple set-cookie headers\n      setCookieHeaders.forEach(setCookieHeader => {\n        this.processSetCookieHeader(setCookieHeader);\n      });\n    } else if (typeof setCookieHeaders === 'string') {\n      // Single set-cookie header\n      this.processSetCookieHeader(setCookieHeaders);\n    }\n  }\n  appendCookies(request) {\n    // We use the capitalized 'Cookie' header, because every browser does that\n    if (request.headers['cookie']) {\n      request.headers['Cookie'] = request.headers['cookie'];\n      delete request.headers['cookie'];\n    } // Cookies already set by custom headers? => Append\n\n    const headerCookie = request.headers['Cookie'];\n    if (typeof headerCookie === 'string') {\n      Object.assign(this.cookies, this.parseCookie(headerCookie), this.cookies);\n    }\n    request.headers['Cookie'] = this.getCookieString();\n  }\n  /**\n   * parse cookies string to object\n   * @param {string} str  multi-cookie string\n   * @returns {Object} parsed cookie object\n   */\n\n  parseCookie(str) {\n    const cookies = {};\n    if (!str) {\n      return cookies;\n    }\n    str.split('; ').forEach(v => {\n      if (!v) {\n        return;\n      }\n      const parts = String(v).split('=');\n      const cookieName = decodeURIComponent(parts.shift());\n      const cookieValue = parts.join('=');\n      cookies[cookieName] = cookieValue;\n    });\n    return cookies;\n  }\n  processSetCookieHeader(setCookieHeader) {\n    const nameValuePart = setCookieHeader.split(';')[0];\n    const parts = nameValuePart.split('=');\n    const cookieName = parts.shift();\n    const cookieValue = parts.join('=');\n    if (typeof cookieName === 'string' && cookieName !== '' && typeof cookieValue === 'string') {\n      // this.cookies[decodeURIComponent(cookieName)] = decodeURIComponent(cookieValue);\n      this.cookies[decodeURIComponent(cookieName)] = cookieValue;\n    }\n  }\n  getCookieByName(cookieName) {\n    return this.cookies[cookieName];\n  }\n  getCookieString() {\n    let cookieString = '';\n    for (const cookieName in this.cookies) {\n      cookieString += encodeURIComponent(cookieName) + '=' + this.cookies[cookieName] + '; ';\n    }\n    return cookieString;\n  }\n  setCookie(name, value) {\n    this.cookies[name] = value;\n  }\n}\nmodule.exports = TikTokCookieJar;","map":{"version":3,"names":["TikTokCookieJar","constructor","axiosInstance","cookies","interceptors","response","use","readCookies","request","appendCookies","setCookieHeaders","headers","Array","isArray","forEach","setCookieHeader","processSetCookieHeader","headerCookie","Object","assign","parseCookie","getCookieString","str","split","v","parts","String","cookieName","decodeURIComponent","shift","cookieValue","join","nameValuePart","getCookieByName","cookieString","encodeURIComponent","setCookie","name","value","module","exports"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/node_modules/tiktok-live-connector/dist/lib/tiktokCookieJar.js"],"sourcesContent":["\"use strict\";\n\n/**\n * Custom cookie jar for axios\n * Because axios-cookiejar-support does not work as expected when using proxy agents\n * https://github.com/zerodytrash/TikTok-Livestream-Chat-Connector/issues/18\n */\nclass TikTokCookieJar {\n  constructor(axiosInstance) {\n    this.axiosInstance = axiosInstance;\n    this.cookies = {}; // Intercept responses to store cookies\n\n    this.axiosInstance.interceptors.response.use(response => {\n      this.readCookies(response);\n      return response;\n    }); // Intercept request to append cookies\n\n    this.axiosInstance.interceptors.request.use(request => {\n      this.appendCookies(request);\n      return request;\n    });\n  }\n\n  readCookies(response) {\n    const setCookieHeaders = response.headers['set-cookie'];\n\n    if (Array.isArray(setCookieHeaders)) {\n      // Mutiple set-cookie headers\n      setCookieHeaders.forEach(setCookieHeader => {\n        this.processSetCookieHeader(setCookieHeader);\n      });\n    } else if (typeof setCookieHeaders === 'string') {\n      // Single set-cookie header\n      this.processSetCookieHeader(setCookieHeaders);\n    }\n  }\n\n  appendCookies(request) {\n    // We use the capitalized 'Cookie' header, because every browser does that\n    if (request.headers['cookie']) {\n      request.headers['Cookie'] = request.headers['cookie'];\n      delete request.headers['cookie'];\n    } // Cookies already set by custom headers? => Append\n\n\n    const headerCookie = request.headers['Cookie'];\n\n    if (typeof headerCookie === 'string') {\n      Object.assign(this.cookies, this.parseCookie(headerCookie), this.cookies);\n    }\n\n    request.headers['Cookie'] = this.getCookieString();\n  }\n  /**\n   * parse cookies string to object\n   * @param {string} str  multi-cookie string\n   * @returns {Object} parsed cookie object\n   */\n\n\n  parseCookie(str) {\n    const cookies = {};\n\n    if (!str) {\n      return cookies;\n    }\n\n    str.split('; ').forEach(v => {\n      if (!v) {\n        return;\n      }\n\n      const parts = String(v).split('=');\n      const cookieName = decodeURIComponent(parts.shift());\n      const cookieValue = parts.join('=');\n      cookies[cookieName] = cookieValue;\n    });\n    return cookies;\n  }\n\n  processSetCookieHeader(setCookieHeader) {\n    const nameValuePart = setCookieHeader.split(';')[0];\n    const parts = nameValuePart.split('=');\n    const cookieName = parts.shift();\n    const cookieValue = parts.join('=');\n\n    if (typeof cookieName === 'string' && cookieName !== '' && typeof cookieValue === 'string') {\n      // this.cookies[decodeURIComponent(cookieName)] = decodeURIComponent(cookieValue);\n      this.cookies[decodeURIComponent(cookieName)] = cookieValue;\n    }\n  }\n\n  getCookieByName(cookieName) {\n    return this.cookies[cookieName];\n  }\n\n  getCookieString() {\n    let cookieString = '';\n\n    for (const cookieName in this.cookies) {\n      cookieString += encodeURIComponent(cookieName) + '=' + this.cookies[cookieName] + '; ';\n    }\n\n    return cookieString;\n  }\n\n  setCookie(name, value) {\n    this.cookies[name] = value;\n  }\n\n}\n\nmodule.exports = TikTokCookieJar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
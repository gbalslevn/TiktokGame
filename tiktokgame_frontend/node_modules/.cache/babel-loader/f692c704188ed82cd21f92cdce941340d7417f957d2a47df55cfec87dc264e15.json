{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Matter from 'matter-js';\nimport bombImage from './assets/2dbomb.png';\n//import testProfilePic from './assets/profilepicture.jpg'\nimport explosion from './assets/explosion.wav';\nimport ding from './assets/ding.mp3';\nimport { useState } from 'react';\nimport ConfettiExplosion from 'react-confetti-explosion';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [confetti, setConfetti] = useState(false);\n  const engine = Matter.Engine.create();\n  engine.gravity.y = 0;\n  const world = engine.world;\n  const canvasWidth = 800;\n  const canvasHeight = 200;\n  const render = Matter.Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n      width: canvasWidth,\n      height: canvasHeight,\n      showAngleIndicator: true,\n      showCollisions: true,\n      hasBounds: true,\n      wireframes: false,\n      background: '#fff'\n    }\n  });\n  Matter.Render.stop(render);\n  Matter.Render.run(render);\n\n  // create runner\n  const runner = Matter.Runner.create();\n  Matter.Runner.run(runner, engine);\n  const wallThichness = 1;\n  Matter.Composite.add(world, [\n  // walls - Created with (xpos, ypos, width, height)\n  Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, {\n    isStatic: true\n  }),\n  // Top\n  Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, {\n    isStatic: true\n  }),\n  // Bottom\n  Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, {\n    isStatic: true\n  }),\n  // Left\n  Matter.Bodies.rectangle(0, canvasHeight / 2, 50, canvasHeight, {\n    isStatic: true,\n    render: {\n      fillStyle: \"grey\"\n    },\n    collisionFilter: {\n      category: 0x0002\n    }\n  }),\n  // Start object. Up to 32 different collision categories. 0x0001 is default\n  Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, 50, canvasWidth, {\n    isStatic: true,\n    render: {\n      fillStyle: \"green\"\n    }\n  }) // Right - Finish line. \n  ]);\n  const startPlayer = createPlayer(\"Startplayer\");\n  Matter.Composite.add(world, [startPlayer]);\n  function createPlayer(label, profilePic) {\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, {\n      isStatic: true,\n      render: {\n        sprite: {\n          texture: bombImage,\n          xScale: 0.1,\n          yScale: 0.1\n        }\n      }\n    }); // bomb\n    const player = Matter.Bodies.rectangle(12, render.canvas.height / 2, 20, 20, {\n      frictionAir: 0.03,\n      density: 0.3,\n      friction: 0.8,\n      label: label,\n      collisionFilter: {\n        mask: 0x0001\n      } // Should be able to hit each other\n      //render: {sprite: {texture: testProfilePic, xScale: 0.04, yScale: 0.04}} // uncomment this for profile pic\n    });\n    return player;\n  }\n  async function spawnBomb() {\n    const bomb = Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, {\n      isStatic: true,\n      render: {\n        sprite: {\n          texture: bombImage,\n          xScale: 0.1,\n          yScale: 0.1\n        }\n      }\n    });\n    Matter.Composite.add(world, [bomb]);\n    playSound(ding);\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    playSound(explosion, 0.25);\n    Matter.Composite.remove(world, [bomb]);\n    explode(bomb.position);\n  }\n\n  // Creates consequense of blast radius\n  function explode(bombPosition) {\n    const allBodies = Matter.Composite.allBodies(world);\n    console.log(allBodies);\n    allBodies.forEach(player => {\n      const distanceToBomb = bombPosition.x - player.position.x;\n      if (player.label === 'Rectangle Body') {\n        return;\n      }\n      // later: check if they are safe from blast. If they have bought safety. Could also add effect on y-axis\n      if (distanceToBomb < 20) {\n        // player dies\n        Matter.Composite.remove(world, [player]);\n      } else if (distanceToBomb > 20 && distanceToBomb < 80) {\n        // gets a blast\n        Matter.Body.applyForce(player, player.position, {\n          x: -2,\n          y: 0\n        });\n      } else if (distanceToBomb > 100 && distanceToBomb < 120) {\n        Matter.Body.applyForce(player, player.position, {\n          x: -1,\n          y: 0\n        });\n      }\n    });\n  }\n  function playSound(file, volume = 1) {\n    const audio = new Audio(file);\n    audio.volume = volume;\n    audio.play();\n  }\n  function spawnPlayer() {\n    console.log(\"Player added\");\n    const player = createPlayer(Math.random());\n    Matter.Composite.add(world, [player]);\n  }\n  function move(username) {\n    //Matter.Body.applyForce(startPlayer, {\n    //  x: startPlayer.position.x,\n    //  y: startPlayer.position.y\n    //}, { x: 0.5, y: 0 })\n    const allBodies = Matter.Composite.allBodies(world);\n    const randomIndex = Math.floor(Math.random() * (allBodies.length - 4)) + 4;\n    const randomPlayer = allBodies[randomIndex];\n    /*\n    const foundPlayer = allBodies.find(player => player.label === username);\n    if (foundPlayer) {\n      Matter.Body.applyForce(foundPlayer, foundPlayer.position, { x: 0.5, y: 0 })\n    } else {\n      console.log(\"Object not found with name:\", username);\n    }\n    */\n    Matter.Body.applyForce(randomPlayer, randomPlayer.position, {\n      x: 0.5,\n      y: 0\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spawnPlayer,\n      children: \"Ny spiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        move(\"Startplayer\");\n      },\n      children: \"Boost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spawnBomb,\n      children: \"Bomb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setConfetti(true);\n      },\n      children: \"Confetti\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: confetti && /*#__PURE__*/_jsxDEV(ConfettiExplosion, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 22\n      }, this)\n    }, void 0, false), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6d2PMk2/rBINzSfQHl3t0cSfEd4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Matter","bombImage","explosion","ding","useState","ConfettiExplosion","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","confetti","setConfetti","engine","Engine","create","gravity","y","world","canvasWidth","canvasHeight","render","Render","element","document","body","options","width","height","showAngleIndicator","showCollisions","hasBounds","wireframes","background","stop","run","runner","Runner","wallThichness","Composite","add","Bodies","rectangle","isStatic","fillStyle","collisionFilter","category","startPlayer","createPlayer","label","profilePic","sprite","texture","xScale","yScale","player","canvas","frictionAir","density","friction","mask","spawnBomb","bomb","playSound","Promise","resolve","setTimeout","remove","explode","position","bombPosition","allBodies","console","log","forEach","distanceToBomb","x","Body","applyForce","file","volume","audio","Audio","play","spawnPlayer","Math","random","move","username","randomIndex","floor","length","randomPlayer","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js"],"sourcesContent":["import './App.css';\nimport Matter from 'matter-js';\nimport bombImage from './assets/2dbomb.png'\n//import testProfilePic from './assets/profilepicture.jpg'\nimport explosion from './assets/explosion.wav';\nimport ding from './assets/ding.mp3'\nimport { useState } from 'react';\nimport ConfettiExplosion from 'react-confetti-explosion';\n\n\nfunction App() {\n  const [confetti, setConfetti] = useState(false)\n  const engine = Matter.Engine.create()\n  engine.gravity.y = 0\n  const world = engine.world\n\n  const canvasWidth = 800\n  const canvasHeight = 200\n\n  const render = Matter.Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n      width: canvasWidth,\n      height: canvasHeight,\n      showAngleIndicator: true,\n      showCollisions: true,\n      hasBounds: true,\n      wireframes: false,\n      background: '#fff'\n    }\n  });\n\n  Matter.Render.stop(render)\n\n\n  Matter.Render.run(render);\n\n  // create runner\n  const runner = Matter.Runner.create();\n  Matter.Runner.run(runner, engine);\n\n\n  const wallThichness = 1\n  Matter.Composite.add(world, [\n    // walls - Created with (xpos, ypos, width, height)\n    Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, { isStatic: true }), // Top\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, { isStatic: true }), // Bottom\n    Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, { isStatic: true }), // Left\n    Matter.Bodies.rectangle(0, canvasHeight / 2, 50, canvasHeight, { isStatic: true, render: { fillStyle: \"grey\" }, collisionFilter: { category: 0x0002 } }), // Start object. Up to 32 different collision categories. 0x0001 is default\n    Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, 50, canvasWidth, { isStatic: true, render: { fillStyle: \"green\" } }), // Right - Finish line. \n  ]);\n\n  const startPlayer = createPlayer(\"Startplayer\")\n  Matter.Composite.add(world, [startPlayer])\n\n\n  function createPlayer(label, profilePic) {\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, { isStatic: true, render: { sprite: { texture: bombImage, xScale: 0.1, yScale: 0.1 } } }) // bomb\n    const player = Matter.Bodies.rectangle(12, render.canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n        label: label,\n        collisionFilter: { mask: 0x0001, }, // Should be able to hit each other\n        //render: {sprite: {texture: testProfilePic, xScale: 0.04, yScale: 0.04}} // uncomment this for profile pic\n      }\n    )\n    return player\n  }\n\n  async function spawnBomb() {\n    const bomb = Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight / 2, 10, 10, { isStatic: true, render: { sprite: { texture: bombImage, xScale: 0.1, yScale: 0.1 } } })\n    Matter.Composite.add(world, [bomb])\n    playSound(ding)\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    playSound(explosion, 0.25)\n    Matter.Composite.remove(world, [bomb])\n    explode(bomb.position)\n  }\n\n  // Creates consequense of blast radius\n  function explode(bombPosition) {\n    const allBodies = Matter.Composite.allBodies(world)\n    console.log(allBodies)\n    allBodies.forEach(player => {\n      const distanceToBomb = bombPosition.x - player.position.x\n      if (player.label === 'Rectangle Body') {\n        return\n      }\n      // later: check if they are safe from blast. If they have bought safety. Could also add effect on y-axis\n      if (distanceToBomb < 20) { // player dies\n        Matter.Composite.remove(world, [player])\n      } else if (distanceToBomb > 20 && distanceToBomb < 80) { // gets a blast\n        Matter.Body.applyForce(player, player.position, { x: -2, y: 0 })\n      } else if (distanceToBomb > 100 && distanceToBomb < 120) {\n        Matter.Body.applyForce(player, player.position, { x: -1, y: 0 })\n      }\n    });\n  }\n\n  function playSound(file, volume = 1) {\n    const audio = new Audio(file)\n    audio.volume = volume\n    audio.play()\n  }\n\n  function spawnPlayer() {\n    console.log(\"Player added\")\n    const player = createPlayer(Math.random())\n    Matter.Composite.add(world, [player])\n  }\n\n  function move(username) {\n    //Matter.Body.applyForce(startPlayer, {\n    //  x: startPlayer.position.x,\n    //  y: startPlayer.position.y\n    //}, { x: 0.5, y: 0 })\n    const allBodies = Matter.Composite.allBodies(world)\n    const randomIndex = Math.floor(Math.random() * (allBodies.length - 4)) + 4;\n    const randomPlayer = allBodies[randomIndex]\n    /*\n    const foundPlayer = allBodies.find(player => player.label === username);\n    if (foundPlayer) {\n      Matter.Body.applyForce(foundPlayer, foundPlayer.position, { x: 0.5, y: 0 })\n    } else {\n      console.log(\"Object not found with name:\", username);\n    }\n    */\n    Matter.Body.applyForce(randomPlayer, randomPlayer.position, { x: 0.5, y: 0 })\n  }\n\n  return (\n    <div className=\"App\">\n      <button onClick={spawnPlayer}>Ny spiller</button>\n      <button onClick={() => { move(\"Startplayer\") }}>Boost</button>\n      <button onClick={spawnBomb}>Bomb</button>\n      <button onClick={() => { setConfetti(true) }}>Confetti</button>\n      <>{confetti && <ConfettiExplosion />}</>;\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
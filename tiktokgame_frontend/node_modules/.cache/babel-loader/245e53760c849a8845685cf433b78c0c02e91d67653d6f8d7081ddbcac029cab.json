{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/components/TikTok.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TikTok({\n  handleComments,\n  handleGifts\n}) {\n  _s();\n  const [inputValue, setInputValue] = useState('');\n  const BACKEND_PORT = 3001;\n  function connectTiktok(username) {\n    fetch(`http://localhost:${BACKEND_PORT}/api/connectTiktok?username=${username}`).then(response => {\n      if (response.ok) {\n        console.log('Connected to tik tok live from user: ' + username);\n      } else {\n        console.error('Failed connect to tik tok live. Check node server for err message');\n      }\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  // Function to handle button click\n  const handleButtonClick = () => {\n    connectTiktok(inputValue);\n  };\n\n  // Function to handle input change\n  const handleInputChange = event => {\n    setInputValue(event.target.value);\n  };\n  function handleComment(comment) {\n    if (handleComments) {\n      console.log(\"user wants the comments\");\n      handleComments(comment);\n    } else {\n      console.log(\"No comment handler provided\");\n    }\n  }\n  function handleComment(gift) {\n    if (handleGifts) {\n      console.log(\"user wants the gifts\");\n      handleComments(comment);\n    } else {\n      console.log(\"No gift handler provided\");\n    }\n  }\n\n  // Establish socket to live\n  useEffect(() => {\n    const socket = io(`http://localhost:${BACKEND_PORT}`);\n    socket.on('connect', () => {\n      console.log('Connected to Socket.IO server');\n    });\n    socket.on('chatMessage', message => {\n      //console.log('Received chat message:', message);\n      // Handle the received chat message in your React component\n      handleComment(message);\n    });\n    socket.on('gift', message => {\n      //console.log('Received chat message:', message);\n      // Handle the received chat message in your React component\n      handleGift(message);\n    });\n    socket.on('disconnect', () => {\n      console.log('Disconnected from Socket.IO server');\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleInputChange,\n      placeholder: \"Enter Tiktok username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      children: \"Connect to live\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(TikTok, \"g3WCsqcvSc9WB7w4du2ucRdqd7Y=\");\n_c = TikTok;\nexport default TikTok;\nvar _c;\n$RefreshReg$(_c, \"TikTok\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","TikTok","handleComments","handleGifts","_s","inputValue","setInputValue","BACKEND_PORT","connectTiktok","username","fetch","then","response","ok","console","log","error","catch","handleButtonClick","handleInputChange","event","target","value","handleComment","comment","gift","socket","on","message","handleGift","disconnect","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/components/TikTok.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\n\nfunction TikTok({handleComments, handleGifts}) {\n    const [inputValue, setInputValue] = useState('');\n    const BACKEND_PORT = 3001\n    function connectTiktok(username) {\n        fetch(`http://localhost:${BACKEND_PORT}/api/connectTiktok?username=${username}`)\n            .then(response => {\n                if (response.ok) {\n                    console.log('Connected to tik tok live from user: ' + username);\n                } else {\n                    console.error('Failed connect to tik tok live. Check node server for err message');\n                }\n            })\n            .catch(error => {\n                console.error('Error:', error);\n            });\n    }\n\n\n    // Function to handle button click\n    const handleButtonClick = () => {\n        connectTiktok(inputValue);\n    };\n\n    // Function to handle input change\n    const handleInputChange = (event) => {\n        setInputValue(event.target.value);\n    };\n\n    function handleComment(comment) {\n        if(handleComments) {\n            console.log(\"user wants the comments\")  \n            handleComments(comment) \n        } else {\n            console.log(\"No comment handler provided\")\n        }\n    }\n    function handleComment(gift) {\n        if(handleGifts) {\n            console.log(\"user wants the gifts\")  \n            handleComments(comment) \n        } else {\n            console.log(\"No gift handler provided\")\n        }\n    }\n\n    // Establish socket to live\n    useEffect(() => {\n        const socket = io(`http://localhost:${BACKEND_PORT}`);\n\n        socket.on('connect', () => {\n            console.log('Connected to Socket.IO server');\n        });\n\n        socket.on('chatMessage', message => {\n            //console.log('Received chat message:', message);\n            // Handle the received chat message in your React component\n            handleComment(message)\n        });\n\n        socket.on('gift', message => {\n            //console.log('Received chat message:', message);\n            // Handle the received chat message in your React component\n            handleGift(message)\n        });\n\n        socket.on('disconnect', () => {\n            console.log('Disconnected from Socket.IO server');\n        });\n\n        return () => {\n            socket.disconnect();\n        };\n    }, []);\n\n    return (\n        <div>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n                placeholder=\"Enter Tiktok username\"\n            />\n            <button onClick={handleButtonClick}>Connect to live</button>\n        </div>\n    );\n}\n\nexport default TikTok;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Matter from 'matter-js';\nimport bombImage from './assets/2dbomb.png';\n//import testProfilePic from './assets/profilepicture.jpg'\nimport explosion from './assets/explosion.wav';\nimport ding from './assets/ding.mp3';\nimport footstep from './assets/footstep.wav';\nimport popup from './assets/popup.wav';\nimport { useEffect, useState, useCallback } from 'react';\nimport ConfettiExplosion from 'react-confetti-explosion';\nimport Leaderboard from './components/Leaderboard';\nimport Timer from './components/Timer';\nimport TikTok from './components/TikTok';\n// spil minecraft soundtrack\n// elevenlabs til lyd. D-Id til video. Måske bruge heygen. \n// Når folk joiner brug https://responsivevoice.org/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //const video = require('./assets/Game_starting_soon.mp4')\n  const [showWinner, setShowWinner] = useState(false);\n  const [latestWinner, setLatestWinner] = useState('not found');\n  const [gameHasLoaded, setGameHasLoaded] = useState(false);\n  const [gameHasStarted, setGameHaStarted] = useState(false);\n  const [confetti, setConfetti] = useState(false);\n  const [world, setWorld] = useState();\n  const [winners, setWinners] = useState([]);\n  const [latestComment, setLatestComment] = useState(null);\n  const [latestLike, setLatestLike] = useState(null);\n  const [latestGift, setLatestGift] = useState(null);\n  const canvasWidth = 800;\n  const canvasHeight = 200;\n  function createGame() {\n    const engine = Matter.Engine.create();\n    engine.gravity.y = 0;\n    const world = engine.world;\n    setWorld(world);\n    const render = Matter.Render.create({\n      element: document.body,\n      engine: engine,\n      options: {\n        width: canvasWidth,\n        height: canvasHeight,\n        showAngleIndicator: true,\n        showCollisions: true,\n        hasBounds: true,\n        wireframes: false,\n        background: '#fff'\n      }\n    });\n    Matter.Render.run(render);\n\n    // create runner\n    const runner = Matter.Runner.create();\n    Matter.Runner.run(runner, engine);\n    const wallThichness = 1;\n    Matter.Composite.add(world, [\n    // walls - Created with (xpos, ypos, width, height)\n    Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, {\n      isStatic: true\n    }),\n    // Top\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, {\n      isStatic: true\n    }),\n    // Bottom\n    Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, {\n      isStatic: true\n    }),\n    // Left\n    Matter.Bodies.rectangle(0, canvasHeight / 2, 50, canvasHeight, {\n      isStatic: true,\n      render: {\n        fillStyle: \"grey\"\n      },\n      collisionFilter: {\n        category: 0x0002\n      }\n    }),\n    // Start object. Up to 32 different collision categories. 0x0001 is default\n    Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, 50, canvasHeight, {\n      isStatic: true,\n      render: {\n        fillStyle: \"green\"\n      }\n    }) // Right - Finish line. \n    ]);\n    // checking collision with green finish line\n    Matter.Events.on(engine, 'collisionStart', function (event) {\n      const pairs = event.pairs;\n      var pair = pairs[0];\n      if (pair.bodyA.render.fillStyle === 'green') {\n        winHandler(pair.bodyB.label);\n        resetWorld(world, engine, render, runner);\n      }\n    });\n    const startPlayer = createPlayer(\"Startplayer\");\n    Matter.Composite.add(world, [startPlayer]);\n    setGameHasLoaded(true);\n  }\n  function createPlayer(username, profilePic) {\n    const player = Matter.Bodies.rectangle(12, canvasHeight / 2, 20, 20, {\n      frictionAir: 0.03,\n      density: 0.3,\n      friction: 0.8,\n      label: username,\n      collisionFilter: {\n        mask: 0x0001\n      } // Should be able to hit each other\n      //render: {sprite: {texture: testProfilePic, xScale: 0.04, yScale: 0.04}} // uncomment this for profile pic\n    });\n    return player;\n  }\n  function spawnPlayer(username) {\n    const player = createPlayer(username);\n    playSound(popup, 0.25);\n    Matter.Composite.add(world, [player]);\n  }\n  function move(username, likes = 1) {\n    const allBodies = Matter.Composite.allBodies(world);\n    const foundPlayer = allBodies.find(player => player.label === username);\n    const force = 0.5 * Math.log10(likes + 9); // +10 so if 1 like is sent it it not log10(1) = 0\n    if (foundPlayer) {\n      console.log(\"Object found with name:\", username);\n      Matter.Body.applyForce(foundPlayer, foundPlayer.position, {\n        x: force,\n        y: 0\n      });\n      playSound(footstep);\n    } else {\n      //console.log(\"Object not found with name:\", username);\n    }\n  }\n  function testMove() {\n    const allBodies = Matter.Composite.allBodies(world);\n    const randomIndex = Math.floor(Math.random() * (allBodies.length - 4)) + 4;\n    const randomPlayer = allBodies[randomIndex];\n    playSound(footstep);\n    Matter.Body.applyForce(randomPlayer, randomPlayer.position, {\n      x: 2,\n      y: 0\n    });\n  }\n  async function spawnBomb() {\n    const randomX = Math.floor(Math.random() * (canvasWidth - 100 + 1)) + 100;\n    const randomY = Math.floor(Math.random() * (canvasHeight - 0 + 1)) + 0;\n    const bomb = Matter.Bodies.rectangle(randomX, randomY, 10, 10, {\n      isStatic: true,\n      render: {\n        sprite: {\n          texture: bombImage,\n          xScale: 0.1,\n          yScale: 0.1\n        }\n      }\n    });\n    Matter.Composite.add(world, [bomb]);\n    playSound(ding);\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    playSound(explosion, 0.25);\n    Matter.Composite.remove(world, [bomb]);\n    explode(bomb.position);\n  }\n\n  // Creates consequense of blast radius\n  function explode(bombPosition) {\n    const allBodies = Matter.Composite.allBodies(world);\n    allBodies.forEach(player => {\n      if (player.label === 'Rectangle Body') {\n        // should only affect players\n        return;\n      }\n      const xDistanceToBomb = bombPosition.x - player.position.x;\n      const yDistanceToBomb = bombPosition.y - player.position.y;\n      //const bigDistance = 120\n      //const medDistance = 80\n      //const lowDistance = 20\n      // I am calculating blast radius in squares. Maybe it should be using circles. Utilizing pi.\n      // later: check if they are safe from blast. If they have bought safety. Could also add effect on y-axis\n\n      // Checks to determine to blast\n      if (Math.abs(xDistanceToBomb) < 20 && Math.abs(yDistanceToBomb) < 20) {\n        // player dies. \n        Matter.Composite.remove(world, [player]);\n      }\n      if (xDistanceToBomb < 0 && xDistanceToBomb > -120) {\n        // The player has passed the bomb\n        if (yDistanceToBomb < 0 && yDistanceToBomb > -120) {\n          // The player is above the bomb\n          Matter.Body.applyForce(player, player.position, {\n            x: 1,\n            y: 1\n          });\n        } else {\n          // The player is below the bomb\n          Matter.Body.applyForce(player, player.position, {\n            x: 1,\n            y: -1\n          });\n        }\n      } else if (xDistanceToBomb > 0 && xDistanceToBomb <= 80) {\n        // Player is to the left of the bomb. gets a blast\n        if (yDistanceToBomb < 0 && yDistanceToBomb > -120) {\n          // The same check as when player bassed the bomb. Could maybe be refactored so there is less code dublication\n          Matter.Body.applyForce(player, player.position, {\n            x: -2,\n            y: 2\n          });\n        } else {\n          Matter.Body.applyForce(player, player.position, {\n            x: -2,\n            y: -2\n          });\n        }\n      } else if (xDistanceToBomb > 80 && xDistanceToBomb <= 120) {\n        // gets minor blast\n        if (yDistanceToBomb < 0 && yDistanceToBomb > -120) {\n          Matter.Body.applyForce(player, player.position, {\n            x: -1,\n            y: 1\n          });\n        } else {\n          Matter.Body.applyForce(player, player.position, {\n            x: -1,\n            y: -1\n          });\n        }\n      }\n    });\n  }\n  function winHandler(winnerUsername) {\n    setLatestWinner(winnerUsername);\n    setShowWinner(true);\n    setConfetti(true);\n    setGameHaStarted(false);\n    // Increment points or add the person as a winner\n    const newArray = winners;\n    const playerIndex = winners.findIndex(winner => winner.label === winnerUsername);\n    if (playerIndex !== -1) {\n      newArray[playerIndex].points++;\n    } else {\n      newArray.push({\n        label: winnerUsername,\n        points: 1\n      });\n    }\n    setWinners(newArray);\n  }\n  function resetWorld(world, engine, render, runner) {\n    setGameHasLoaded(false);\n    Matter.World.clear(world);\n    Matter.Engine.clear(engine);\n    Matter.Render.stop(render);\n    Matter.Runner.stop(runner);\n    Matter.Events.off(engine, 'collisionStart');\n    render.canvas.remove();\n    render.canvas = null;\n    render.context = null;\n    createGame();\n  }\n  function handleComments(comment) {\n    if (gameHasLoaded) {\n      console.log(comment.profilePictureUrl);\n      const username = comment.uniqueId;\n      const allBodies = Matter.Composite.allBodies(world);\n      const playerExists = allBodies.find(player => player.label === username);\n      if (!playerExists) {\n        setLatestComment(comment); // når latestComment ændrer sig skal man kalde spawnplayer i useEffect\n        // Prøvede også at have spawnplayer i den her metode (handleComments), men når man gav handlecomments til Tik Tok komponenten var det som om den gemte en gammel state af world, så den kunne ikke spawne players i nye verdener. Løst med useEffect løsningen\n      } else {\n        //console.log(`Player ${username} has already joined`);\n      }\n    }\n  }\n  ;\n  function handleGifts(gift) {\n    if (gameHasLoaded) {\n      //setLatestGift(gift)\n    }\n  }\n  function handleLikes(like) {\n    if (gameHasLoaded) {\n      setLatestLike(like);\n    }\n  }\n  useEffect(() => {\n    if (latestComment) {\n      const username = latestComment.uniqueId;\n      const profilePice = latestComment.uniqueId;\n      console.log(latestComment);\n      spawnPlayer(username);\n    }\n  }, [latestComment]);\n  useEffect(() => {\n    if (latestGift) {\n      const giftType = latestGift.giftName;\n      if (giftType === \"Rose\") {\n        spawnBomb();\n      }\n      console.log(latestGift);\n    }\n  }, [latestGift]);\n  useEffect(() => {\n    if (latestLike) {\n      const username = latestLike.uniqueId;\n      const likeCount = latestLike.likeCount; // Amount likes sent for each like\n      move(username, likeCount);\n      //console.log(latestLike)\n    }\n  }, [latestLike]);\n  function playSound(file, volume = 1) {\n    const audio = new Audio(file);\n    audio.volume = volume;\n    audio.play();\n  }\n  useEffect(() => {\n    createGame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        spawnPlayer(\"Gustav\");\n      },\n      children: \"Ny spiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        move(\"Startplayer\");\n      },\n      children: \"Boost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: spawnBomb,\n      children: \"Bomb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createGame,\n      children: \"Lav spil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Leaderboard, {\n      winners: winners\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), showWinner && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Winner is \", latestWinner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 22\n    }, this), confetti && /*#__PURE__*/_jsxDEV(ConfettiExplosion, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 67\n    }, this), /*#__PURE__*/_jsxDEV(Timer, {\n      duration: 3,\n      gameHasStarted: gameHasStarted,\n      setGameHasStarted: setGameHaStarted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), gameHasLoaded && /*#__PURE__*/_jsxDEV(TikTok, {\n      handleComments: handleComments,\n      handleGifts: handleGifts,\n      handleLikes: handleLikes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }, this), \"    \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"P0c4V1jA6Fb5ocojp1rlQ7AT3Cw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Matter","bombImage","explosion","ding","footstep","popup","useEffect","useState","useCallback","ConfettiExplosion","Leaderboard","Timer","TikTok","jsxDEV","_jsxDEV","App","_s","showWinner","setShowWinner","latestWinner","setLatestWinner","gameHasLoaded","setGameHasLoaded","gameHasStarted","setGameHaStarted","confetti","setConfetti","world","setWorld","winners","setWinners","latestComment","setLatestComment","latestLike","setLatestLike","latestGift","setLatestGift","canvasWidth","canvasHeight","createGame","engine","Engine","create","gravity","y","render","Render","element","document","body","options","width","height","showAngleIndicator","showCollisions","hasBounds","wireframes","background","run","runner","Runner","wallThichness","Composite","add","Bodies","rectangle","isStatic","fillStyle","collisionFilter","category","Events","on","event","pairs","pair","bodyA","winHandler","bodyB","label","resetWorld","startPlayer","createPlayer","username","profilePic","player","frictionAir","density","friction","mask","spawnPlayer","playSound","move","likes","allBodies","foundPlayer","find","force","Math","log10","console","log","Body","applyForce","position","x","testMove","randomIndex","floor","random","length","randomPlayer","spawnBomb","randomX","randomY","bomb","sprite","texture","xScale","yScale","Promise","resolve","setTimeout","remove","explode","bombPosition","forEach","xDistanceToBomb","yDistanceToBomb","abs","winnerUsername","newArray","playerIndex","findIndex","winner","points","push","World","clear","stop","off","canvas","context","handleComments","comment","profilePictureUrl","uniqueId","playerExists","handleGifts","gift","handleLikes","like","profilePice","giftType","giftName","likeCount","file","volume","audio","Audio","play","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","duration","setGameHasStarted","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js"],"sourcesContent":["import './App.css';\nimport Matter from 'matter-js';\nimport bombImage from './assets/2dbomb.png'\n//import testProfilePic from './assets/profilepicture.jpg'\nimport explosion from './assets/explosion.wav';\nimport ding from './assets/ding.mp3'\nimport footstep from './assets/footstep.wav'\nimport popup from './assets/popup.wav'\nimport { useEffect, useState, useCallback } from 'react';\nimport ConfettiExplosion from 'react-confetti-explosion';\nimport Leaderboard from './components/Leaderboard';\nimport Timer from './components/Timer';\nimport TikTok from './components/TikTok';\n// spil minecraft soundtrack\n// elevenlabs til lyd. D-Id til video. Måske bruge heygen. \n// Når folk joiner brug https://responsivevoice.org/\n\nfunction App() {\n  //const video = require('./assets/Game_starting_soon.mp4')\n  const [showWinner, setShowWinner] = useState(false)\n  const [latestWinner, setLatestWinner] = useState('not found')\n  const [gameHasLoaded, setGameHasLoaded] = useState(false)\n  const [gameHasStarted, setGameHaStarted] = useState(false)\n  const [confetti, setConfetti] = useState(false)\n  const [world, setWorld] = useState()\n  const [winners, setWinners] = useState([])\n  const [latestComment, setLatestComment] = useState(null)\n  const [latestLike, setLatestLike] = useState(null)\n  const [latestGift, setLatestGift] = useState(null)\n\n  const canvasWidth = 800\n  const canvasHeight = 200\n\n  function createGame() {\n    const engine = Matter.Engine.create()\n    engine.gravity.y = 0\n    const world = engine.world\n    setWorld(world)\n    const render = Matter.Render.create({\n      element: document.body,\n      engine: engine,\n      options: {\n        width: canvasWidth,\n        height: canvasHeight,\n        showAngleIndicator: true,\n        showCollisions: true,\n        hasBounds: true,\n        wireframes: false,\n        background: '#fff'\n      }\n    });\n\n    Matter.Render.run(render);\n\n    // create runner\n    const runner = Matter.Runner.create();\n    Matter.Runner.run(runner, engine);\n\n    const wallThichness = 1\n    Matter.Composite.add(world, [\n      // walls - Created with (xpos, ypos, width, height)\n      Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, { isStatic: true }), // Top\n      Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, { isStatic: true }), // Bottom\n      Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, { isStatic: true }), // Left\n      Matter.Bodies.rectangle(0, canvasHeight / 2, 50, canvasHeight, { isStatic: true, render: { fillStyle: \"grey\" }, collisionFilter: { category: 0x0002 } }), // Start object. Up to 32 different collision categories. 0x0001 is default\n      Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, 50, canvasHeight, { isStatic: true, render: { fillStyle: \"green\" } }) // Right - Finish line. \n    ]);\n    // checking collision with green finish line\n    Matter.Events.on(engine, 'collisionStart', function (event) {\n      const pairs = event.pairs;\n      var pair = pairs[0];\n      if (pair.bodyA.render.fillStyle === 'green') {\n        winHandler(pair.bodyB.label)\n        resetWorld(world, engine, render, runner)\n      }\n    });\n\n    const startPlayer = createPlayer(\"Startplayer\")\n    Matter.Composite.add(world, [startPlayer])\n    setGameHasLoaded(true)\n  }\n\n  function createPlayer(username, profilePic) {\n    const player = Matter.Bodies.rectangle(12, canvasHeight / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n        label: username,\n        collisionFilter: { mask: 0x0001, }, // Should be able to hit each other\n        //render: {sprite: {texture: testProfilePic, xScale: 0.04, yScale: 0.04}} // uncomment this for profile pic\n      }\n    )\n    return player\n  }\n\n  function spawnPlayer(username) {\n    const player = createPlayer(username)\n    playSound(popup, 0.25)\n    Matter.Composite.add(world, [player])\n  }\n\n  function move(username, likes = 1) {\n    const allBodies = Matter.Composite.allBodies(world)\n    const foundPlayer = allBodies.find(player => player.label === username);\n    const force = 0.5 * Math.log10(likes + 9) // +10 so if 1 like is sent it it not log10(1) = 0\n    if (foundPlayer) {\n      console.log(\"Object found with name:\", username);\n      Matter.Body.applyForce(foundPlayer, foundPlayer.position, { x: force, y: 0 })\n      playSound(footstep)\n    } else {\n      //console.log(\"Object not found with name:\", username);\n    }\n  }\n\n\n  function testMove() {\n    const allBodies = Matter.Composite.allBodies(world)\n    const randomIndex = Math.floor(Math.random() * (allBodies.length - 4)) + 4;\n    const randomPlayer = allBodies[randomIndex]\n    playSound(footstep)\n    Matter.Body.applyForce(randomPlayer, randomPlayer.position, { x: 2, y: 0 })\n  }\n\n\n  async function spawnBomb() {\n    const randomX = Math.floor(Math.random() * (canvasWidth - 100 + 1)) + 100;\n    const randomY = Math.floor(Math.random() * (canvasHeight - 0 + 1)) + 0;\n    const bomb = Matter.Bodies.rectangle(randomX, randomY, 10, 10, { isStatic: true, render: { sprite: { texture: bombImage, xScale: 0.1, yScale: 0.1 } } })\n    Matter.Composite.add(world, [bomb])\n    playSound(ding)\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    playSound(explosion, 0.25)\n    Matter.Composite.remove(world, [bomb])\n    explode(bomb.position)\n  }\n\n  // Creates consequense of blast radius\n  function explode(bombPosition) {\n    const allBodies = Matter.Composite.allBodies(world)\n    allBodies.forEach(player => {\n      if (player.label === 'Rectangle Body') { // should only affect players\n        return\n      }\n      const xDistanceToBomb = bombPosition.x - player.position.x\n      const yDistanceToBomb = bombPosition.y - player.position.y\n      //const bigDistance = 120\n      //const medDistance = 80\n      //const lowDistance = 20\n      // I am calculating blast radius in squares. Maybe it should be using circles. Utilizing pi.\n      // later: check if they are safe from blast. If they have bought safety. Could also add effect on y-axis\n\n      // Checks to determine to blast\n      if (Math.abs(xDistanceToBomb) < 20 && Math.abs(yDistanceToBomb) < 20) { // player dies. \n        Matter.Composite.remove(world, [player])\n      }\n      if (xDistanceToBomb < 0 && xDistanceToBomb > -120) { // The player has passed the bomb\n        if (yDistanceToBomb < 0 && yDistanceToBomb > -120) { // The player is above the bomb\n          Matter.Body.applyForce(player, player.position, { x: 1, y: 1 })\n        } else { // The player is below the bomb\n          Matter.Body.applyForce(player, player.position, { x: 1, y: -1 })\n        }\n      } else if (xDistanceToBomb > 0 && xDistanceToBomb <= 80) { // Player is to the left of the bomb. gets a blast\n        if (yDistanceToBomb < 0 && yDistanceToBomb > -120) {  // The same check as when player bassed the bomb. Could maybe be refactored so there is less code dublication\n          Matter.Body.applyForce(player, player.position, { x: -2, y: 2 })\n        } else {\n          Matter.Body.applyForce(player, player.position, { x: -2, y: -2 })\n        }\n      } else if (xDistanceToBomb > 80 && xDistanceToBomb <= 120) { // gets minor blast\n        if (yDistanceToBomb < 0 && yDistanceToBomb > -120) {\n          Matter.Body.applyForce(player, player.position, { x: -1, y: 1 })\n        } else {\n          Matter.Body.applyForce(player, player.position, { x: -1, y: -1 })\n        }\n      }\n    });\n  }\n\n  function winHandler(winnerUsername) {\n    setLatestWinner(winnerUsername)\n    setShowWinner(true)\n    setConfetti(true)\n    setGameHaStarted(false)\n    // Increment points or add the person as a winner\n    const newArray = winners\n    const playerIndex = winners.findIndex(winner => winner.label === winnerUsername);\n    if (playerIndex !== -1) {\n      newArray[playerIndex].points++\n    } else {\n      newArray.push({ label: winnerUsername, points: 1 })\n    }\n    setWinners(newArray)\n  }\n\n  function resetWorld(world, engine, render, runner) {\n    setGameHasLoaded(false)\n    Matter.World.clear(world);\n    Matter.Engine.clear(engine);\n    Matter.Render.stop(render);\n    Matter.Runner.stop(runner);\n    Matter.Events.off(engine, 'collisionStart')\n    render.canvas.remove();\n    render.canvas = null;\n    render.context = null;\n    createGame()\n  }\n\n  function handleComments(comment) {\n    if (gameHasLoaded) {\n      console.log(comment.profilePictureUrl)\n      const username = comment.uniqueId\n      const allBodies = Matter.Composite.allBodies(world)\n      const playerExists = allBodies.find(player => player.label === username);\n      if (!playerExists) {\n        setLatestComment(comment) // når latestComment ændrer sig skal man kalde spawnplayer i useEffect\n        // Prøvede også at have spawnplayer i den her metode (handleComments), men når man gav handlecomments til Tik Tok komponenten var det som om den gemte en gammel state af world, så den kunne ikke spawne players i nye verdener. Løst med useEffect løsningen\n      } else {\n        //console.log(`Player ${username} has already joined`);\n      }\n    }\n  };\n\n  function handleGifts(gift) {\n    if (gameHasLoaded) {\n      //setLatestGift(gift)\n    }\n  }\n  function handleLikes(like) {\n    if (gameHasLoaded) {\n      setLatestLike(like)\n    }\n  }\n\n  useEffect(() => {\n    if (latestComment) {\n      const username = latestComment.uniqueId\n      const profilePice = latestComment.uniqueId\n      console.log(latestComment)\n      spawnPlayer(username)\n    }\n  }, [latestComment])\n\n  useEffect(() => {\n    if (latestGift) {\n      const giftType = latestGift.giftName\n      if (giftType === \"Rose\") {\n        spawnBomb()\n      }\n      console.log(latestGift)\n    }\n  }, [latestGift])\n\n  useEffect(() => {\n    if (latestLike) {\n      const username = latestLike.uniqueId\n      const likeCount = latestLike.likeCount // Amount likes sent for each like\n      move(username, likeCount)\n      //console.log(latestLike)\n    }\n  }, [latestLike])\n\n\n\n  function playSound(file, volume = 1) {\n    const audio = new Audio(file)\n    audio.volume = volume\n    audio.play()\n  }\n\n  useEffect(() => {\n    createGame()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => { spawnPlayer(\"Gustav\") }}>Ny spiller</button>\n      <button onClick={() => { move(\"Startplayer\") }}>Boost</button>\n      <button onClick={spawnBomb}>Bomb</button>\n      <button onClick={createGame}>Lav spil</button>\n      {/*<button onClick={() => { setConfetti(true) }}><>{confetti && <ConfettiExplosion />}</>Confetti</button>*/}\n      <Leaderboard winners={winners}></Leaderboard>\n      {/*<video src={video} type=\"video/mp4\" autoPlay width={300} height={300}></video>*/}\n      {showWinner && <p>Winner is {latestWinner}</p>}{confetti && <ConfettiExplosion />}{/*showWinner && <ComponentToShow />*/}\n      <Timer duration={3} gameHasStarted={gameHasStarted} setGameHasStarted={setGameHaStarted}></Timer>\n      {gameHasLoaded && <TikTok handleComments={handleComments} handleGifts={handleGifts} handleLikes={handleLikes} />}    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
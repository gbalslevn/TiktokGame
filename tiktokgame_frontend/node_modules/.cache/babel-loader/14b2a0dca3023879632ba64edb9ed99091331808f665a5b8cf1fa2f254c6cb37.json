{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js\";\nimport './App.css';\nimport Matter from 'matter-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const engine = Matter.Engine.create();\n  const world = engine.world;\n  var render = Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n      width: 800,\n      height: 600,\n      showAngleIndicator: true,\n      showCollisions: true\n    }\n  });\n  function addPlayer() {\n    console.log(\"Player added\");\n  }\n  /*\n  const { PI } = Math;\n  const TAU = PI * 2;\n  const canvas = document.createElement(\"canvas\");\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  canvas.height = 180;\n  canvas.width = 400;\n   const engine = Matter.Engine.create();\n  engine.gravity.y = 0; // enable top-down\n  const ship = {\n    body: Matter.Bodies.rectangle(canvas.width / 2, canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    ),\n    size: 20,\n    destX: canvas.width / 2,\n    destY: canvas.height / 2,\n    color: \"#eaf\",\n    setDestination(x, y) {\n      this.destX = x;\n      this.destY = y;\n    },\n    draw(ctx) {\n      ctx.save();\n      ctx.translate(this.body.position.x, this.body.position.y);\n      ctx.rotate(this.body.angle);\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.size / 1.2, 0);\n      ctx.stroke();\n      ctx.fillStyle = this.color;\n      ctx.fillRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.strokeRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.restore();\n    },\n  };\n   Matter.Composite.add(engine.world, [ship.body]);\n   canvas.addEventListener(\"click\", (e) => {\n    ship.setDestination(e.offsetX, e.offsetY);\n  });\n   (function update() {\n    requestAnimationFrame(update);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n     const { x, y } = ship.body.position;\n    const dist = Math.sqrt(\n      (ship.destX - x) ** 2 + (ship.destY - y) ** 2\n    );\n     if (dist > 10) {\n      const dx = ship.destX - ship.body.position.x;\n      const dy = ship.destY - ship.body.position.y;\n       let theta = Math.atan2(dy, dx);\n      const a =\n        ship.body.angle > 0\n          ? ((ship.body.angle + TAU) % TAU) - TAU\n          : -(((-ship.body.angle + TAU) % TAU) - TAU);\n      let diff = a - theta;\n      diff = diff > PI ? diff - TAU : diff;\n      diff = diff < -PI ? diff + TAU : diff;\n      const f = dist < 70 ? Math.min(0.02, dist / 10000) : 0.03;\n      Matter.Body.applyForce(\n        ship.body,\n        { x, y },\n        {\n          x: Math.cos(theta) * f,\n          y: Math.sin(theta) * f,\n        }\n      );\n       if (dist > 15) {\n        Matter.Body.setAngularVelocity(ship.body, diff / -8);\n      } else {\n        Matter.Body.setAngularVelocity(ship.body, 0);\n      }\n    }\n     ship.draw(ctx); // Draws figure\n    Matter.Engine.update(engine);\n  })();\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addPlayer,\n      children: \"Ny spiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Boost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Matter","jsxDEV","_jsxDEV","App","engine","Engine","create","world","render","Render","element","document","body","options","width","height","showAngleIndicator","showCollisions","addPlayer","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js"],"sourcesContent":["import './App.css';\nimport Matter from 'matter-js';\n\nfunction App() {\n  const engine = Matter.Engine.create()\n  const world = engine.world\n  var render = Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n        width: 800,\n        height: 600,\n        showAngleIndicator: true,\n        showCollisions: true\n    }\n});\n\n  \n  function addPlayer() {\n    console.log(\"Player added\")\n  }\n  /*\n  const { PI } = Math;\n  const TAU = PI * 2;\n  const canvas = document.createElement(\"canvas\");\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  canvas.height = 180;\n  canvas.width = 400;\n\n  const engine = Matter.Engine.create();\n  engine.gravity.y = 0; // enable top-down\n  const ship = {\n    body: Matter.Bodies.rectangle(canvas.width / 2, canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    ),\n    size: 20,\n    destX: canvas.width / 2,\n    destY: canvas.height / 2,\n    color: \"#eaf\",\n    setDestination(x, y) {\n      this.destX = x;\n      this.destY = y;\n    },\n    draw(ctx) {\n      ctx.save();\n      ctx.translate(this.body.position.x, this.body.position.y);\n      ctx.rotate(this.body.angle);\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.size / 1.2, 0);\n      ctx.stroke();\n      ctx.fillStyle = this.color;\n      ctx.fillRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.strokeRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.restore();\n    },\n  };\n\n  Matter.Composite.add(engine.world, [ship.body]);\n\n  canvas.addEventListener(\"click\", (e) => {\n    ship.setDestination(e.offsetX, e.offsetY);\n  });\n\n  (function update() {\n    requestAnimationFrame(update);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const { x, y } = ship.body.position;\n    const dist = Math.sqrt(\n      (ship.destX - x) ** 2 + (ship.destY - y) ** 2\n    );\n\n    if (dist > 10) {\n      const dx = ship.destX - ship.body.position.x;\n      const dy = ship.destY - ship.body.position.y;\n\n      let theta = Math.atan2(dy, dx);\n      const a =\n        ship.body.angle > 0\n          ? ((ship.body.angle + TAU) % TAU) - TAU\n          : -(((-ship.body.angle + TAU) % TAU) - TAU);\n      let diff = a - theta;\n      diff = diff > PI ? diff - TAU : diff;\n      diff = diff < -PI ? diff + TAU : diff;\n      const f = dist < 70 ? Math.min(0.02, dist / 10000) : 0.03;\n      Matter.Body.applyForce(\n        ship.body,\n        { x, y },\n        {\n          x: Math.cos(theta) * f,\n          y: Math.sin(theta) * f,\n        }\n      );\n\n      if (dist > 15) {\n        Matter.Body.setAngularVelocity(ship.body, diff / -8);\n      } else {\n        Matter.Body.setAngularVelocity(ship.body, 0);\n      }\n    }\n\n    ship.draw(ctx); // Draws figure\n    Matter.Engine.update(engine);\n  })();\n  */\n  return (\n    <div className=\"App\">\n      <button onClick={addPlayer}>Ny spiller</button>\n      <button>Boost</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGJ,MAAM,CAACK,MAAM,CAACC,MAAM,CAAC,CAAC;EACrC,MAAMC,KAAK,GAAGH,MAAM,CAACG,KAAK;EAC1B,IAAIC,MAAM,GAAGC,MAAM,CAACH,MAAM,CAAC;IACzBI,OAAO,EAAEC,QAAQ,CAACC,IAAI;IACtBR,MAAM,EAAEA,MAAM;IACdS,OAAO,EAAE;MACLC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE,GAAG;MACXC,kBAAkB,EAAE,IAAI;MACxBC,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EAGA,SAASC,SAASA,CAAA,EAAG;IACnBC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;EAC7B;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAUE,oBACElB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAQqB,OAAO,EAAEL,SAAU;MAAAI,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/CzB,OAAA;MAAAoB,QAAA,EAAQ;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACC,EAAA,GA7HQzB,GAAG;AA+HZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
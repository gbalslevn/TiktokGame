{"ast":null,"code":"\"use strict\";\n\n/**\n * This ugly function brings the nested protobuf objects to a flat level\n * In addition, attributes in \"Long\" format are converted to strings (e.g. UserIds)\n * This makes it easier to handle the data later, since some libraries have problems to serialize this protobuf specific data.\n */\nfunction simplifyObject(webcastObject) {\n  if (webcastObject.questionDetails) {\n    Object.assign(webcastObject, webcastObject.questionDetails);\n    delete webcastObject.questionDetails;\n  }\n  if (webcastObject.user) {\n    Object.assign(webcastObject, getUserAttributes(webcastObject.user));\n    delete webcastObject.user;\n  }\n  if (webcastObject.event) {\n    Object.assign(webcastObject, getEventAttributes(webcastObject.event));\n    delete webcastObject.event;\n  }\n  if (webcastObject.eventDetails) {\n    Object.assign(webcastObject, webcastObject.eventDetails);\n    delete webcastObject.eventDetails;\n  }\n  if (webcastObject.topViewers) {\n    webcastObject.topViewers = getTopViewerAttributes(webcastObject.topViewers);\n  }\n  if (webcastObject.battleUsers) {\n    let battleUsers = [];\n    webcastObject.battleUsers.forEach(user => {\n      var _user$battleGroup;\n      if (user !== null && user !== void 0 && (_user$battleGroup = user.battleGroup) !== null && _user$battleGroup !== void 0 && _user$battleGroup.user) {\n        battleUsers.push(getUserAttributes(user.battleGroup.user));\n      }\n    });\n    webcastObject.battleUsers = battleUsers;\n  }\n  if (webcastObject.battleItems) {\n    webcastObject.battleArmies = [];\n    webcastObject.battleItems.forEach(battleItem => {\n      battleItem.battleGroups.forEach(battleGroup => {\n        let group = {\n          hostUserId: battleItem.hostUserId.toString(),\n          points: parseInt(battleGroup.points),\n          participants: []\n        };\n        battleGroup.users.forEach(user => {\n          group.participants.push(getUserAttributes(user));\n        });\n        webcastObject.battleArmies.push(group);\n      });\n    });\n    delete webcastObject.battleItems;\n  }\n  if (webcastObject.giftId) {\n    var _webcastObject$giftDe;\n\n    // Convert to boolean\n    webcastObject.repeatEnd = !!webcastObject.repeatEnd; // Add previously used JSON structure (for compatibility reasons)\n    // Can be removed soon\n\n    webcastObject.gift = {\n      gift_id: webcastObject.giftId,\n      repeat_count: webcastObject.repeatCount,\n      repeat_end: webcastObject.repeatEnd ? 1 : 0,\n      gift_type: (_webcastObject$giftDe = webcastObject.giftDetails) === null || _webcastObject$giftDe === void 0 ? void 0 : _webcastObject$giftDe.giftType\n    };\n    if (webcastObject.giftDetails) {\n      Object.assign(webcastObject, webcastObject.giftDetails);\n      delete webcastObject.giftDetails;\n    }\n    if (webcastObject.giftImage) {\n      Object.assign(webcastObject, webcastObject.giftImage);\n      delete webcastObject.giftImage;\n    }\n    if (webcastObject.giftExtra) {\n      Object.assign(webcastObject, webcastObject.giftExtra);\n      delete webcastObject.giftExtra;\n      if (webcastObject.receiverUserId) {\n        webcastObject.receiverUserId = webcastObject.receiverUserId.toString();\n      }\n      if (webcastObject.timestamp) {\n        webcastObject.timestamp = parseInt(webcastObject.timestamp);\n      }\n    }\n    if (webcastObject.groupId) {\n      webcastObject.groupId = webcastObject.groupId.toString();\n    }\n    if (typeof webcastObject.monitorExtra === 'string' && webcastObject.monitorExtra.indexOf('{') === 0) {\n      try {\n        webcastObject.monitorExtra = JSON.parse(webcastObject.monitorExtra);\n      } catch (err) {}\n    }\n  }\n  if (webcastObject.emote) {\n    var _webcastObject$emote, _webcastObject$emote2, _webcastObject$emote3;\n    webcastObject.emoteId = (_webcastObject$emote = webcastObject.emote) === null || _webcastObject$emote === void 0 ? void 0 : _webcastObject$emote.emoteId;\n    webcastObject.emoteImageUrl = (_webcastObject$emote2 = webcastObject.emote) === null || _webcastObject$emote2 === void 0 ? void 0 : (_webcastObject$emote3 = _webcastObject$emote2.image) === null || _webcastObject$emote3 === void 0 ? void 0 : _webcastObject$emote3.imageUrl;\n    delete webcastObject.emote;\n  }\n  if (webcastObject.emotes) {\n    webcastObject.emotes = webcastObject.emotes.map(x => {\n      var _x$emote, _x$emote2, _x$emote2$image;\n      return {\n        emoteId: (_x$emote = x.emote) === null || _x$emote === void 0 ? void 0 : _x$emote.emoteId,\n        emoteImageUrl: (_x$emote2 = x.emote) === null || _x$emote2 === void 0 ? void 0 : (_x$emote2$image = _x$emote2.image) === null || _x$emote2$image === void 0 ? void 0 : _x$emote2$image.imageUrl,\n        placeInComment: x.placeInComment\n      };\n    });\n  }\n  if (webcastObject.treasureBoxUser) {\n    var _webcastObject$treasu, _webcastObject$treasu2, _webcastObject$treasu3, _webcastObject$treasu4;\n\n    // holy crap\n    Object.assign(webcastObject, getUserAttributes(((_webcastObject$treasu = webcastObject.treasureBoxUser) === null || _webcastObject$treasu === void 0 ? void 0 : (_webcastObject$treasu2 = _webcastObject$treasu.user2) === null || _webcastObject$treasu2 === void 0 ? void 0 : (_webcastObject$treasu3 = _webcastObject$treasu2.user3[0]) === null || _webcastObject$treasu3 === void 0 ? void 0 : (_webcastObject$treasu4 = _webcastObject$treasu3.user4) === null || _webcastObject$treasu4 === void 0 ? void 0 : _webcastObject$treasu4.user) || {}));\n    delete webcastObject.treasureBoxUser;\n  }\n  if (webcastObject.treasureBoxData) {\n    Object.assign(webcastObject, webcastObject.treasureBoxData);\n    delete webcastObject.treasureBoxData;\n    webcastObject.timestamp = parseInt(webcastObject.timestamp);\n  }\n  return Object.assign({}, webcastObject);\n}\nfunction getUserAttributes(webcastUser) {\n  var _webcastUser$userId, _webcastUser$secUid, _webcastUser$profileP, _webcastUser$followIn, _webcastUser$badges, _webcastUser$createTi, _webcastUser$profileP2, _userAttributes$userB, _userAttributes$userB2, _userAttributes$userB3, _userAttributes$userB4, _userAttributes$userB5;\n  let userAttributes = {\n    userId: (_webcastUser$userId = webcastUser.userId) === null || _webcastUser$userId === void 0 ? void 0 : _webcastUser$userId.toString(),\n    secUid: (_webcastUser$secUid = webcastUser.secUid) === null || _webcastUser$secUid === void 0 ? void 0 : _webcastUser$secUid.toString(),\n    uniqueId: webcastUser.uniqueId !== '' ? webcastUser.uniqueId : undefined,\n    nickname: webcastUser.nickname !== '' ? webcastUser.nickname : undefined,\n    profilePictureUrl: getPreferredPictureFormat((_webcastUser$profileP = webcastUser.profilePicture) === null || _webcastUser$profileP === void 0 ? void 0 : _webcastUser$profileP.urls),\n    followRole: (_webcastUser$followIn = webcastUser.followInfo) === null || _webcastUser$followIn === void 0 ? void 0 : _webcastUser$followIn.followStatus,\n    userBadges: mapBadges(webcastUser.badges),\n    userSceneTypes: (_webcastUser$badges = webcastUser.badges) === null || _webcastUser$badges === void 0 ? void 0 : _webcastUser$badges.map(x => (x === null || x === void 0 ? void 0 : x.badgeSceneType) || 0),\n    userDetails: {\n      createTime: (_webcastUser$createTi = webcastUser.createTime) === null || _webcastUser$createTi === void 0 ? void 0 : _webcastUser$createTi.toString(),\n      bioDescription: webcastUser.bioDescription,\n      profilePictureUrls: (_webcastUser$profileP2 = webcastUser.profilePicture) === null || _webcastUser$profileP2 === void 0 ? void 0 : _webcastUser$profileP2.urls\n    }\n  };\n  if (webcastUser.followInfo) {\n    userAttributes.followInfo = {\n      followingCount: webcastUser.followInfo.followingCount,\n      followerCount: webcastUser.followInfo.followerCount,\n      followStatus: webcastUser.followInfo.followStatus,\n      pushStatus: webcastUser.followInfo.pushStatus\n    };\n  } // badgeSceneType:1 = ADMIN\n  // badgeSceneType:4 = SUBSCRIBER\n  // badgeSceneType:7 = NEWSUBSCRIBER\n\n  userAttributes.isModerator = userAttributes.userBadges.some(x => x.type && x.type.toLowerCase().includes('moderator') || x.badgeSceneType === 1);\n  userAttributes.isNewGifter = userAttributes.userBadges.some(x => x.type && x.type.toLowerCase().includes('live_ng_'));\n  userAttributes.isSubscriber = userAttributes.userBadges.some(x => x.url && x.url.toLowerCase().includes('/sub_') || x.badgeSceneType === 4 || x.badgeSceneType === 7);\n  userAttributes.topGifterRank = (_userAttributes$userB = (_userAttributes$userB2 = userAttributes.userBadges.find(x => x.url && x.url.includes('/ranklist_top_gifter_'))) === null || _userAttributes$userB2 === void 0 ? void 0 : (_userAttributes$userB3 = _userAttributes$userB2.url.match(/(?<=ranklist_top_gifter_)(\\d+)(?=.png)/g)) === null || _userAttributes$userB3 === void 0 ? void 0 : _userAttributes$userB3.map(Number)[0]) !== null && _userAttributes$userB !== void 0 ? _userAttributes$userB : null;\n  userAttributes.gifterLevel = ((_userAttributes$userB4 = userAttributes.userBadges.find(x => x.badgeSceneType === 8)) === null || _userAttributes$userB4 === void 0 ? void 0 : _userAttributes$userB4.level) || 0; // BadgeSceneType_UserGrade\n\n  userAttributes.teamMemberLevel = ((_userAttributes$userB5 = userAttributes.userBadges.find(x => x.badgeSceneType === 10)) === null || _userAttributes$userB5 === void 0 ? void 0 : _userAttributes$userB5.level) || 0; // BadgeSceneType_Fans\n\n  return userAttributes;\n}\nfunction getEventAttributes(event) {\n  if (event.msgId) event.msgId = event.msgId.toString();\n  if (event.createTime) event.createTime = event.createTime.toString();\n  return event;\n}\nfunction getTopViewerAttributes(topViewers) {\n  return topViewers.map(viewer => {\n    return {\n      user: viewer.user ? getUserAttributes(viewer.user) : null,\n      coinCount: viewer.coinCount ? parseInt(viewer.coinCount) : 0\n    };\n  });\n}\nfunction mapBadges(badges) {\n  let simplifiedBadges = [];\n  if (Array.isArray(badges)) {\n    badges.forEach(innerBadges => {\n      var _innerBadges$privileg, _innerBadges$privileg2;\n      let badgeSceneType = innerBadges.badgeSceneType;\n      if (Array.isArray(innerBadges.badges)) {\n        innerBadges.badges.forEach(badge => {\n          simplifiedBadges.push(Object.assign({\n            badgeSceneType\n          }, badge));\n        });\n      }\n      if (Array.isArray(innerBadges.imageBadges)) {\n        innerBadges.imageBadges.forEach(badge => {\n          if (badge && badge.image && badge.image.url) {\n            simplifiedBadges.push({\n              type: 'image',\n              badgeSceneType,\n              displayType: badge.displayType,\n              url: badge.image.url\n            });\n          }\n        });\n      }\n      if ((_innerBadges$privileg = innerBadges.privilegeLogExtra) !== null && _innerBadges$privileg !== void 0 && _innerBadges$privileg.level && ((_innerBadges$privileg2 = innerBadges.privilegeLogExtra) === null || _innerBadges$privileg2 === void 0 ? void 0 : _innerBadges$privileg2.level) !== '0') {\n        simplifiedBadges.push({\n          type: 'privilege',\n          privilegeId: innerBadges.privilegeLogExtra.privilegeId,\n          level: parseInt(innerBadges.privilegeLogExtra.level),\n          badgeSceneType: innerBadges.badgeSceneType\n        });\n      }\n    });\n  }\n  return simplifiedBadges;\n}\nfunction getPreferredPictureFormat(pictureUrls) {\n  if (!pictureUrls || !Array.isArray(pictureUrls) || !pictureUrls.length) {\n    return null;\n  }\n  return pictureUrls.find(x => x.includes('100x100') && x.includes('.webp')) || pictureUrls.find(x => x.includes('100x100') && x.includes('.jpeg')) || pictureUrls.find(x => !x.includes('shrink')) || pictureUrls[0];\n}\nmodule.exports = {\n  simplifyObject\n};","map":{"version":3,"names":["simplifyObject","webcastObject","questionDetails","Object","assign","user","getUserAttributes","event","getEventAttributes","eventDetails","topViewers","getTopViewerAttributes","battleUsers","forEach","_user$battleGroup","battleGroup","push","battleItems","battleArmies","battleItem","battleGroups","group","hostUserId","toString","points","parseInt","participants","users","giftId","_webcastObject$giftDe","repeatEnd","gift","gift_id","repeat_count","repeatCount","repeat_end","gift_type","giftDetails","giftType","giftImage","giftExtra","receiverUserId","timestamp","groupId","monitorExtra","indexOf","JSON","parse","err","emote","_webcastObject$emote","_webcastObject$emote2","_webcastObject$emote3","emoteId","emoteImageUrl","image","imageUrl","emotes","map","x","_x$emote","_x$emote2","_x$emote2$image","placeInComment","treasureBoxUser","_webcastObject$treasu","_webcastObject$treasu2","_webcastObject$treasu3","_webcastObject$treasu4","user2","user3","user4","treasureBoxData","webcastUser","_webcastUser$userId","_webcastUser$secUid","_webcastUser$profileP","_webcastUser$followIn","_webcastUser$badges","_webcastUser$createTi","_webcastUser$profileP2","_userAttributes$userB","_userAttributes$userB2","_userAttributes$userB3","_userAttributes$userB4","_userAttributes$userB5","userAttributes","userId","secUid","uniqueId","undefined","nickname","profilePictureUrl","getPreferredPictureFormat","profilePicture","urls","followRole","followInfo","followStatus","userBadges","mapBadges","badges","userSceneTypes","badgeSceneType","userDetails","createTime","bioDescription","profilePictureUrls","followingCount","followerCount","pushStatus","isModerator","some","type","toLowerCase","includes","isNewGifter","isSubscriber","url","topGifterRank","find","match","Number","gifterLevel","level","teamMemberLevel","msgId","viewer","coinCount","simplifiedBadges","Array","isArray","innerBadges","_innerBadges$privileg","_innerBadges$privileg2","badge","imageBadges","displayType","privilegeLogExtra","privilegeId","pictureUrls","length","module","exports"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/node_modules/tiktok-live-connector/dist/lib/webcastDataConverter.js"],"sourcesContent":["\"use strict\";\n\n/**\n * This ugly function brings the nested protobuf objects to a flat level\n * In addition, attributes in \"Long\" format are converted to strings (e.g. UserIds)\n * This makes it easier to handle the data later, since some libraries have problems to serialize this protobuf specific data.\n */\nfunction simplifyObject(webcastObject) {\n  if (webcastObject.questionDetails) {\n    Object.assign(webcastObject, webcastObject.questionDetails);\n    delete webcastObject.questionDetails;\n  }\n\n  if (webcastObject.user) {\n    Object.assign(webcastObject, getUserAttributes(webcastObject.user));\n    delete webcastObject.user;\n  }\n\n  if (webcastObject.event) {\n    Object.assign(webcastObject, getEventAttributes(webcastObject.event));\n    delete webcastObject.event;\n  }\n\n  if (webcastObject.eventDetails) {\n    Object.assign(webcastObject, webcastObject.eventDetails);\n    delete webcastObject.eventDetails;\n  }\n\n  if (webcastObject.topViewers) {\n    webcastObject.topViewers = getTopViewerAttributes(webcastObject.topViewers);\n  }\n\n  if (webcastObject.battleUsers) {\n    let battleUsers = [];\n    webcastObject.battleUsers.forEach(user => {\n      var _user$battleGroup;\n\n      if (user !== null && user !== void 0 && (_user$battleGroup = user.battleGroup) !== null && _user$battleGroup !== void 0 && _user$battleGroup.user) {\n        battleUsers.push(getUserAttributes(user.battleGroup.user));\n      }\n    });\n    webcastObject.battleUsers = battleUsers;\n  }\n\n  if (webcastObject.battleItems) {\n    webcastObject.battleArmies = [];\n    webcastObject.battleItems.forEach(battleItem => {\n      battleItem.battleGroups.forEach(battleGroup => {\n        let group = {\n          hostUserId: battleItem.hostUserId.toString(),\n          points: parseInt(battleGroup.points),\n          participants: []\n        };\n        battleGroup.users.forEach(user => {\n          group.participants.push(getUserAttributes(user));\n        });\n        webcastObject.battleArmies.push(group);\n      });\n    });\n    delete webcastObject.battleItems;\n  }\n\n  if (webcastObject.giftId) {\n    var _webcastObject$giftDe;\n\n    // Convert to boolean\n    webcastObject.repeatEnd = !!webcastObject.repeatEnd; // Add previously used JSON structure (for compatibility reasons)\n    // Can be removed soon\n\n    webcastObject.gift = {\n      gift_id: webcastObject.giftId,\n      repeat_count: webcastObject.repeatCount,\n      repeat_end: webcastObject.repeatEnd ? 1 : 0,\n      gift_type: (_webcastObject$giftDe = webcastObject.giftDetails) === null || _webcastObject$giftDe === void 0 ? void 0 : _webcastObject$giftDe.giftType\n    };\n\n    if (webcastObject.giftDetails) {\n      Object.assign(webcastObject, webcastObject.giftDetails);\n      delete webcastObject.giftDetails;\n    }\n\n    if (webcastObject.giftImage) {\n      Object.assign(webcastObject, webcastObject.giftImage);\n      delete webcastObject.giftImage;\n    }\n\n    if (webcastObject.giftExtra) {\n      Object.assign(webcastObject, webcastObject.giftExtra);\n      delete webcastObject.giftExtra;\n\n      if (webcastObject.receiverUserId) {\n        webcastObject.receiverUserId = webcastObject.receiverUserId.toString();\n      }\n\n      if (webcastObject.timestamp) {\n        webcastObject.timestamp = parseInt(webcastObject.timestamp);\n      }\n    }\n\n    if (webcastObject.groupId) {\n      webcastObject.groupId = webcastObject.groupId.toString();\n    }\n\n    if (typeof webcastObject.monitorExtra === 'string' && webcastObject.monitorExtra.indexOf('{') === 0) {\n      try {\n        webcastObject.monitorExtra = JSON.parse(webcastObject.monitorExtra);\n      } catch (err) {}\n    }\n  }\n\n  if (webcastObject.emote) {\n    var _webcastObject$emote, _webcastObject$emote2, _webcastObject$emote3;\n\n    webcastObject.emoteId = (_webcastObject$emote = webcastObject.emote) === null || _webcastObject$emote === void 0 ? void 0 : _webcastObject$emote.emoteId;\n    webcastObject.emoteImageUrl = (_webcastObject$emote2 = webcastObject.emote) === null || _webcastObject$emote2 === void 0 ? void 0 : (_webcastObject$emote3 = _webcastObject$emote2.image) === null || _webcastObject$emote3 === void 0 ? void 0 : _webcastObject$emote3.imageUrl;\n    delete webcastObject.emote;\n  }\n\n  if (webcastObject.emotes) {\n    webcastObject.emotes = webcastObject.emotes.map(x => {\n      var _x$emote, _x$emote2, _x$emote2$image;\n\n      return {\n        emoteId: (_x$emote = x.emote) === null || _x$emote === void 0 ? void 0 : _x$emote.emoteId,\n        emoteImageUrl: (_x$emote2 = x.emote) === null || _x$emote2 === void 0 ? void 0 : (_x$emote2$image = _x$emote2.image) === null || _x$emote2$image === void 0 ? void 0 : _x$emote2$image.imageUrl,\n        placeInComment: x.placeInComment\n      };\n    });\n  }\n\n  if (webcastObject.treasureBoxUser) {\n    var _webcastObject$treasu, _webcastObject$treasu2, _webcastObject$treasu3, _webcastObject$treasu4;\n\n    // holy crap\n    Object.assign(webcastObject, getUserAttributes(((_webcastObject$treasu = webcastObject.treasureBoxUser) === null || _webcastObject$treasu === void 0 ? void 0 : (_webcastObject$treasu2 = _webcastObject$treasu.user2) === null || _webcastObject$treasu2 === void 0 ? void 0 : (_webcastObject$treasu3 = _webcastObject$treasu2.user3[0]) === null || _webcastObject$treasu3 === void 0 ? void 0 : (_webcastObject$treasu4 = _webcastObject$treasu3.user4) === null || _webcastObject$treasu4 === void 0 ? void 0 : _webcastObject$treasu4.user) || {}));\n    delete webcastObject.treasureBoxUser;\n  }\n\n  if (webcastObject.treasureBoxData) {\n    Object.assign(webcastObject, webcastObject.treasureBoxData);\n    delete webcastObject.treasureBoxData;\n    webcastObject.timestamp = parseInt(webcastObject.timestamp);\n  }\n\n  return Object.assign({}, webcastObject);\n}\n\nfunction getUserAttributes(webcastUser) {\n  var _webcastUser$userId, _webcastUser$secUid, _webcastUser$profileP, _webcastUser$followIn, _webcastUser$badges, _webcastUser$createTi, _webcastUser$profileP2, _userAttributes$userB, _userAttributes$userB2, _userAttributes$userB3, _userAttributes$userB4, _userAttributes$userB5;\n\n  let userAttributes = {\n    userId: (_webcastUser$userId = webcastUser.userId) === null || _webcastUser$userId === void 0 ? void 0 : _webcastUser$userId.toString(),\n    secUid: (_webcastUser$secUid = webcastUser.secUid) === null || _webcastUser$secUid === void 0 ? void 0 : _webcastUser$secUid.toString(),\n    uniqueId: webcastUser.uniqueId !== '' ? webcastUser.uniqueId : undefined,\n    nickname: webcastUser.nickname !== '' ? webcastUser.nickname : undefined,\n    profilePictureUrl: getPreferredPictureFormat((_webcastUser$profileP = webcastUser.profilePicture) === null || _webcastUser$profileP === void 0 ? void 0 : _webcastUser$profileP.urls),\n    followRole: (_webcastUser$followIn = webcastUser.followInfo) === null || _webcastUser$followIn === void 0 ? void 0 : _webcastUser$followIn.followStatus,\n    userBadges: mapBadges(webcastUser.badges),\n    userSceneTypes: (_webcastUser$badges = webcastUser.badges) === null || _webcastUser$badges === void 0 ? void 0 : _webcastUser$badges.map(x => (x === null || x === void 0 ? void 0 : x.badgeSceneType) || 0),\n    userDetails: {\n      createTime: (_webcastUser$createTi = webcastUser.createTime) === null || _webcastUser$createTi === void 0 ? void 0 : _webcastUser$createTi.toString(),\n      bioDescription: webcastUser.bioDescription,\n      profilePictureUrls: (_webcastUser$profileP2 = webcastUser.profilePicture) === null || _webcastUser$profileP2 === void 0 ? void 0 : _webcastUser$profileP2.urls\n    }\n  };\n\n  if (webcastUser.followInfo) {\n    userAttributes.followInfo = {\n      followingCount: webcastUser.followInfo.followingCount,\n      followerCount: webcastUser.followInfo.followerCount,\n      followStatus: webcastUser.followInfo.followStatus,\n      pushStatus: webcastUser.followInfo.pushStatus\n    };\n  } // badgeSceneType:1 = ADMIN\n  // badgeSceneType:4 = SUBSCRIBER\n  // badgeSceneType:7 = NEWSUBSCRIBER\n\n\n  userAttributes.isModerator = userAttributes.userBadges.some(x => x.type && x.type.toLowerCase().includes('moderator') || x.badgeSceneType === 1);\n  userAttributes.isNewGifter = userAttributes.userBadges.some(x => x.type && x.type.toLowerCase().includes('live_ng_'));\n  userAttributes.isSubscriber = userAttributes.userBadges.some(x => x.url && x.url.toLowerCase().includes('/sub_') || x.badgeSceneType === 4 || x.badgeSceneType === 7);\n  userAttributes.topGifterRank = (_userAttributes$userB = (_userAttributes$userB2 = userAttributes.userBadges.find(x => x.url && x.url.includes('/ranklist_top_gifter_'))) === null || _userAttributes$userB2 === void 0 ? void 0 : (_userAttributes$userB3 = _userAttributes$userB2.url.match(/(?<=ranklist_top_gifter_)(\\d+)(?=.png)/g)) === null || _userAttributes$userB3 === void 0 ? void 0 : _userAttributes$userB3.map(Number)[0]) !== null && _userAttributes$userB !== void 0 ? _userAttributes$userB : null;\n  userAttributes.gifterLevel = ((_userAttributes$userB4 = userAttributes.userBadges.find(x => x.badgeSceneType === 8)) === null || _userAttributes$userB4 === void 0 ? void 0 : _userAttributes$userB4.level) || 0; // BadgeSceneType_UserGrade\n\n  userAttributes.teamMemberLevel = ((_userAttributes$userB5 = userAttributes.userBadges.find(x => x.badgeSceneType === 10)) === null || _userAttributes$userB5 === void 0 ? void 0 : _userAttributes$userB5.level) || 0; // BadgeSceneType_Fans\n\n  return userAttributes;\n}\n\nfunction getEventAttributes(event) {\n  if (event.msgId) event.msgId = event.msgId.toString();\n  if (event.createTime) event.createTime = event.createTime.toString();\n  return event;\n}\n\nfunction getTopViewerAttributes(topViewers) {\n  return topViewers.map(viewer => {\n    return {\n      user: viewer.user ? getUserAttributes(viewer.user) : null,\n      coinCount: viewer.coinCount ? parseInt(viewer.coinCount) : 0\n    };\n  });\n}\n\nfunction mapBadges(badges) {\n  let simplifiedBadges = [];\n\n  if (Array.isArray(badges)) {\n    badges.forEach(innerBadges => {\n      var _innerBadges$privileg, _innerBadges$privileg2;\n\n      let badgeSceneType = innerBadges.badgeSceneType;\n\n      if (Array.isArray(innerBadges.badges)) {\n        innerBadges.badges.forEach(badge => {\n          simplifiedBadges.push(Object.assign({\n            badgeSceneType\n          }, badge));\n        });\n      }\n\n      if (Array.isArray(innerBadges.imageBadges)) {\n        innerBadges.imageBadges.forEach(badge => {\n          if (badge && badge.image && badge.image.url) {\n            simplifiedBadges.push({\n              type: 'image',\n              badgeSceneType,\n              displayType: badge.displayType,\n              url: badge.image.url\n            });\n          }\n        });\n      }\n\n      if ((_innerBadges$privileg = innerBadges.privilegeLogExtra) !== null && _innerBadges$privileg !== void 0 && _innerBadges$privileg.level && ((_innerBadges$privileg2 = innerBadges.privilegeLogExtra) === null || _innerBadges$privileg2 === void 0 ? void 0 : _innerBadges$privileg2.level) !== '0') {\n        simplifiedBadges.push({\n          type: 'privilege',\n          privilegeId: innerBadges.privilegeLogExtra.privilegeId,\n          level: parseInt(innerBadges.privilegeLogExtra.level),\n          badgeSceneType: innerBadges.badgeSceneType\n        });\n      }\n    });\n  }\n\n  return simplifiedBadges;\n}\n\nfunction getPreferredPictureFormat(pictureUrls) {\n  if (!pictureUrls || !Array.isArray(pictureUrls) || !pictureUrls.length) {\n    return null;\n  }\n\n  return pictureUrls.find(x => x.includes('100x100') && x.includes('.webp')) || pictureUrls.find(x => x.includes('100x100') && x.includes('.jpeg')) || pictureUrls.find(x => !x.includes('shrink')) || pictureUrls[0];\n}\n\nmodule.exports = {\n  simplifyObject\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
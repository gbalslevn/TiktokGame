{"ast":null,"code":"var _jsxFileName = \"/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport './App.css';\nimport Matter from 'matter-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const engine = Matter.Engine.create();\n    engine.gravity.y = 0;\n    const world = engine.world;\n    const canvasWidth = 800;\n    const canvasHeight = 200;\n    const render = Matter.Render.create({\n      element: document.body,\n      engine: engine,\n      options: {\n        width: canvasWidth,\n        height: canvasHeight,\n        showAngleIndicator: true,\n        showCollisions: true,\n        hasBounds: true,\n        wireframes: false,\n        background: '#fff'\n      }\n    });\n    Matter.Render.run(render);\n\n    // create runner\n    const runner = Matter.Runner.create();\n    Matter.Runner.run(runner, engine);\n\n    // add bodies\n    const wallThichness = 1;\n    Matter.Composite.add(world, [\n    // walls - Created with (xpos, ypos, width, height)\n    Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, {\n      isStatic: true\n    }),\n    // Top\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, {\n      isStatic: true\n    }),\n    // Bottom\n    Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, {\n      isStatic: true\n    }),\n    // Left\n    Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, wallThichness, canvasWidth, {\n      isStatic: true\n    }) // Right\n    ]);\n    const startPlayer = spawnPlayer();\n    Matter.Composite.add(world, [startPlayer]);\n    function spawnPlayer() {\n      //Math.random()\n      const player = Matter.Bodies.rectangle(20, render.canvas.height / 2, 20, 20, {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8\n      });\n      return player;\n    }\n    function addPlayer() {\n      console.log(\"Player added\");\n      const player = spawnPlayer();\n      Matter.Composite.add(world, [player]);\n    }\n    function move() {\n      Matter.Body.applyForce(startPlayer, {\n        x: startPlayer.position.x,\n        y: startPlayer.position.y\n      }, {\n        x: 0.5,\n        y: 0\n      });\n      //console.log(Matter.Composite.allBodies(world))\n    }\n  });\n  useEffect(() => {}, []);\n  /*\n  const { PI } = Math;\n  const TAU = PI * 2;\n  const canvas = document.createElement(\"canvas\");\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  canvas.height = 180;\n  canvas.width = 400;\n   const engine = Matter.Engine.create();\n  engine.gravity.y = 0; // enable top-down\n  const ship = {\n    body: Matter.Bodies.rectangle(canvas.width / 2, canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    ),\n    size: 20,\n    destX: canvas.width / 2,\n    destY: canvas.height / 2,\n    color: \"#eaf\",\n    setDestination(x, y) {\n      this.destX = x;\n      this.destY = y;\n    },\n    draw(ctx) {\n      ctx.save();\n      ctx.translate(this.body.position.x, this.body.position.y);\n      ctx.rotate(this.body.angle);\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.size / 1.2, 0);\n      ctx.stroke();\n      ctx.fillStyle = this.color;\n      ctx.fillRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.strokeRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.restore();\n    },\n  };\n   Matter.Composite.add(engine.world, [ship.body]);\n   canvas.addEventListener(\"click\", (e) => {\n    ship.setDestination(e.offsetX, e.offsetY);\n  });\n   (function update() {\n    requestAnimationFrame(update);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n     const { x, y } = ship.body.position;\n    const dist = Math.sqrt(\n      (ship.destX - x) ** 2 + (ship.destY - y) ** 2\n    );\n     if (dist > 10) {\n      const dx = ship.destX - ship.body.position.x;\n      const dy = ship.destY - ship.body.position.y;\n       let theta = Math.atan2(dy, dx);\n      const a =\n        ship.body.angle > 0\n          ? ((ship.body.angle + TAU) % TAU) - TAU\n          : -(((-ship.body.angle + TAU) % TAU) - TAU);\n      let diff = a - theta;\n      diff = diff > PI ? diff - TAU : diff;\n      diff = diff < -PI ? diff + TAU : diff;\n      const f = dist < 70 ? Math.min(0.02, dist / 10000) : 0.03;\n      Matter.Body.applyForce(\n        ship.body,\n        { x, y },\n        {\n          x: Math.cos(theta) * f,\n          y: Math.sin(theta) * f,\n        }\n      );\n       if (dist > 15) {\n        Matter.Body.setAngularVelocity(ship.body, diff / -8);\n      } else {\n        Matter.Body.setAngularVelocity(ship.body, 0);\n      }\n    }\n     ship.draw(ctx); // Draws figure\n    Matter.Engine.update(engine);\n  })();\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addPlayer,\n      children: \"Ny spiller\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: move,\n      children: \"Boost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Matter","jsxDEV","_jsxDEV","App","_s","engine","Engine","create","gravity","y","world","canvasWidth","canvasHeight","render","Render","element","document","body","options","width","height","showAngleIndicator","showCollisions","hasBounds","wireframes","background","run","runner","Runner","wallThichness","Composite","add","Bodies","rectangle","isStatic","startPlayer","spawnPlayer","player","canvas","frictionAir","density","friction","addPlayer","console","log","move","Body","applyForce","x","position","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gustavnielsen/Documents/Kode.nosync/tiktokgame/src/App.js"],"sourcesContent":["import { useEffect } from 'react';\nimport './App.css';\nimport Matter from 'matter-js';\n\nfunction App() {\n  useEffect(() => {\n  const engine = Matter.Engine.create()\n  engine.gravity.y = 0\n  const world = engine.world\n\n  const canvasWidth = 800\n  const canvasHeight = 200\n\n  const render = Matter.Render.create({\n    element: document.body,\n    engine: engine,\n    options: {\n      width: canvasWidth,\n      height: canvasHeight,\n      showAngleIndicator: true,\n      showCollisions: true,\n      hasBounds: true,\n      wireframes: false,\n      background: '#fff'\n    }\n  });\n\n\n  Matter.Render.run(render);\n\n  // create runner\n  const runner = Matter.Runner.create();\n  Matter.Runner.run(runner, engine);\n\n\n  // add bodies\n  const wallThichness = 1\n  Matter.Composite.add(world, [\n    // walls - Created with (xpos, ypos, width, height)\n    Matter.Bodies.rectangle(canvasWidth / 2, 0, canvasWidth, wallThichness, { isStatic: true }), // Top\n    Matter.Bodies.rectangle(canvasWidth / 2, canvasHeight, canvasWidth, wallThichness, { isStatic: true }), // Bottom\n    Matter.Bodies.rectangle(0, canvasHeight / 2, wallThichness, canvasHeight, { isStatic: true }), // Left\n    Matter.Bodies.rectangle(canvasWidth, canvasHeight / 2, wallThichness, canvasWidth, { isStatic: true }), // Right\n  ]);\n\n  const startPlayer = spawnPlayer()\n  Matter.Composite.add(world, [startPlayer])\n  \n\n\n  function spawnPlayer() {\n    //Math.random()\n    const player = Matter.Bodies.rectangle(20, render.canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    )\n    return player\n  }\n\n\n\n  function addPlayer() {\n    console.log(\"Player added\")\n    const player = spawnPlayer()\n    Matter.Composite.add(world, [player])\n  }\n\n  function move() {\n    Matter.Body.applyForce(startPlayer, {\n      x: startPlayer.position.x,\n      y: startPlayer.position.y\n    }, { x: 0.5, y: 0 })\n    //console.log(Matter.Composite.allBodies(world))\n  }\n\n})\n\n  useEffect(() => {\n  }, [])\n  /*\n  const { PI } = Math;\n  const TAU = PI * 2;\n  const canvas = document.createElement(\"canvas\");\n  document.body.appendChild(canvas);\n  const ctx = canvas.getContext(\"2d\");\n  canvas.height = 180;\n  canvas.width = 400;\n\n  const engine = Matter.Engine.create();\n  engine.gravity.y = 0; // enable top-down\n  const ship = {\n    body: Matter.Bodies.rectangle(canvas.width / 2, canvas.height / 2, 20, 20,\n      {\n        frictionAir: 0.03,\n        density: 0.3,\n        friction: 0.8,\n      }\n    ),\n    size: 20,\n    destX: canvas.width / 2,\n    destY: canvas.height / 2,\n    color: \"#eaf\",\n    setDestination(x, y) {\n      this.destX = x;\n      this.destY = y;\n    },\n    draw(ctx) {\n      ctx.save();\n      ctx.translate(this.body.position.x, this.body.position.y);\n      ctx.rotate(this.body.angle);\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.size / 1.2, 0);\n      ctx.stroke();\n      ctx.fillStyle = this.color;\n      ctx.fillRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.strokeRect(\n        this.size / -2,\n        this.size / -2,\n        this.size,\n        this.size\n      );\n      ctx.restore();\n    },\n  };\n\n  Matter.Composite.add(engine.world, [ship.body]);\n\n  canvas.addEventListener(\"click\", (e) => {\n    ship.setDestination(e.offsetX, e.offsetY);\n  });\n\n  (function update() {\n    requestAnimationFrame(update);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const { x, y } = ship.body.position;\n    const dist = Math.sqrt(\n      (ship.destX - x) ** 2 + (ship.destY - y) ** 2\n    );\n\n    if (dist > 10) {\n      const dx = ship.destX - ship.body.position.x;\n      const dy = ship.destY - ship.body.position.y;\n\n      let theta = Math.atan2(dy, dx);\n      const a =\n        ship.body.angle > 0\n          ? ((ship.body.angle + TAU) % TAU) - TAU\n          : -(((-ship.body.angle + TAU) % TAU) - TAU);\n      let diff = a - theta;\n      diff = diff > PI ? diff - TAU : diff;\n      diff = diff < -PI ? diff + TAU : diff;\n      const f = dist < 70 ? Math.min(0.02, dist / 10000) : 0.03;\n      Matter.Body.applyForce(\n        ship.body,\n        { x, y },\n        {\n          x: Math.cos(theta) * f,\n          y: Math.sin(theta) * f,\n        }\n      );\n\n      if (dist > 15) {\n        Matter.Body.setAngularVelocity(ship.body, diff / -8);\n      } else {\n        Matter.Body.setAngularVelocity(ship.body, 0);\n      }\n    }\n\n    ship.draw(ctx); // Draws figure\n    Matter.Engine.update(engine);\n  })();\n  */\n  return (\n    <div className=\"App\">\n      <button onClick={addPlayer}>Ny spiller</button>\n      <button onClick={move}>Boost</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAUE,oBACEG,OAAA;IAAKgD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjD,OAAA;MAAQkD,OAAO,EAAEV,SAAU;MAAAS,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/CtD,OAAA;MAAQkD,OAAO,EAAEP,IAAK;MAAAM,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAACpD,EAAA,CAzLQD,GAAG;AAAAsD,EAAA,GAAHtD,GAAG;AA2LZ,eAAeA,GAAG;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}